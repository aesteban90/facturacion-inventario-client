{"version":3,"sources":["utils/utils.js","imagens/LogoDRDistribuidora.PNG","components/login/logout.js","components/nav/navbar.component.js","UserContext.js","components/nav/navbar-top.js","components/nav/menu.js","utils/registerLocaleEsp.js","components/dashboard/dasboard.component.js","components/caja/caja-form.component.js","components/caja/caja-list.component.js","components/usuarios/usuarios-form.component.js","components/usuarios/usuarios-list.component.js","components/inventario/inventario-form.component.js","components/inventario/inventario-list.component.js","components/compras/compras-form.component.js","components/compras/compras-list.component.js","components/proveedores/proveedor-form.component.js","components/proveedores/proveedor-list.component.js","components/caja-detalles/caja-detalles-form.component.js","components/caja-detalles/caja-detalles-list.component.js","components/caja-config/caja-config-form.component.js","components/caja-config/caja-config-list.component.js","components/clientes/cliente-form.component.js","components/clientes/cliente-list.component.js","components/timbrados/timbrados-form.component.js","components/switch-toogle/switchList-toggle.component.js","components/timbrados/timbrados-list.component.js","components/caja-facturas/caja-facturas-list.component.js","components/login/login.js","App.js","components/login/useToken.js","index.js"],"names":["getDiv","numero","numero_al","trim","replaceAll","total","k","index","length","element","parseInt","resto","convertMiles","nStr","replace","indexOf","substring","x1","split","rgx","test","convertMilesSinDecimales","logout","localStorage","removeItem","window","location","NavbarTop","props","className","id","children","NavbarTopItem","useState","open","setOpen","varid","href","icon","onClick","Navbar","src","companyLogo","alt","NavBarItemFolder","class","style","display","name","NavBarItem","path","UserContext","createContext","currentUser","NavbarTopMenu","useContext","faUser","moment","fecha","format","faArrowRightFromBracket","Menu","faList","faGripHorizontal","faBox","roles","includes","faGear","faWarehouse","faUsers","faTruck","faCartShopping","faUserGear","es","localize","month","buildLocalizeFn","values","narrow","abbreviated","wide","defaultWidth","defaultFormattingWidth","day","registerLocale","setDefaultLocale","require","Dashboard","onChangeReporteVentasFechaMes","date","setState","reporteVentas_fechaMes","reportePorMes","onChangeReporteVentasFechaDia","reporteVentas_fechaDia","reportePorDia","onChangeDatosCargados","selectedOption","datosCargadosSelected","changeDatosCargados","label","reporteProductosPorDia","value","reporteProductosPorMes","reporteProductosPorAnho","productosMasVendidos","axios","get","process","REACT_APP_SERVER_URL","then","res","reporteProductos","data","catch","err","console","log","productosPorFecha","reporteVentas","document","querySelector","checked","classList","remove","add","datosCargadosOptions","totalesPerDay","totalMes","yearSelected","state","getFullYear","monthSelected","getMonth","map","dataYear","_id","year","monthlyusage","dataMonth","dailyusage","dataDayli","push","totalPrecio","reporteVentas_options","chart","type","xaxis","categories","yaxis","labels","formatter","val","dataLabels","enabled","reporteVentas_series","reporteVentas_totales_ventas","totalesPerMonth","totalAnho","totales","reportePorAnho","totalesPerYear","reporteVentas_totales_productos","Date","reporteProductos_options","reporteProductos_series","chartProductos_height","this","daySelected","containsData","products","totalProducto","product","yearlyusage","undefined","inventario","plotOptions","bar","horizontal","totalProductoPerMonth","totalProductoPerYear","height","autoComplete","htmlFor","locale","required","dateFormat","showMonthYearPicker","selected","onChange","showYearPicker","options","series","noOptionsMessage","Component","CajaForm","getCajasConfigOptions","response","forEach","descripcion","cajaSelected","cajaOptions","onChangeCajas","onChangeMontoApertura","e","montoApertura","target","onChangeDescripcion","handleCloseAlert","onSubtmit","preventDefault","onParentVerificarCaja","isCerrado","caja","estado","fechaApertura","user_created","user_updated","post","showNotification","textButton","titleForm","idUpdate","fechaCierre","montoCierre","context","isSuccess","message","innerHTML","onUpdateParentList","setTimeout","onSubmit","disabled","autoFocus","thousandSeparator","decimalSeparator","faArrowLeft","role","contextType","CajaList","updateList","datos","loading","detallesFacturas","dato","detalles","jsondatos","createData","cerrarCaja","total_cierre_caja","alert","verificarCaja","Promise","resolve","cajaConf","didUpdate","datalist","bind","faPlus","placeholder","Spinner","animation","variant","margin","alignSelf","UsuariosForm","getRolesSelected","querySelectorAll","item","rolesSelected","onChangeNickname","nickname","onChangeNombreCompleto","nombre_completo","onChangePassword","password","roleslist","rol","usuario","REACT_APP_ROLES","_input","focus","ref","c","UsuariosList","deleteData","delete","filter","el","updateData","join","faEdit","faTrash","faExclamationCircle","InventarioForm","onChangeCodigo","codigo","onChangePrecioCosto","precio_costo","onChangePrecioVenta","precio_venta","onChangeCantidad","cantidad","maxLength","InventarioList","ComprasForm","getInventariosOptions","inventarioSelected","inventarioOptions","getProveedoresOptions","razonsocial","proveedorSelected","proveedorOptions","onChangeFechaCompra","fechaCompra","onChangeNumeroFactura","numerofactura","onChangeTotal","onChangeInventario","onChangeProveedor","calcularTotal","onChangeCosto","costo","compras","proveedor","fecha_compra","showYearDropdown","customInput","mask","ComprasList","paginar","color","fontSize","ProveedorForm","onChangeRazonSocial","onChangeRuc","ruc","div","getInputRef","ProveedorList","CajaDetallesForm","getTimbrado","timbrado","getClientesOptions","optiondefault","clienteOptions","clienteSelected","precio","onKeyPressBuscarCliente","key","_inputRecibido","onSubtmitCliente","onKeyPressRecibido","onUpdateParentUltimoVuelto","pagamiento_vuelto","_inputBuscarCliente","onKeyPressCodigoBarra","pagamiento_total","innerText","onChangeCodigoBarra","codigoBarra","codigobarra","cod_inv","indexInventario","producto","onChangePrecio","onChangeProducto","onChangeRecibido","vuelto","pagamiento_recibido","onChangeCliente","detalleCaja","factura","cliente","recibido","clientes","submitFactura","onParentPrintFactura","setInterval","activeElement","onKeyPress","onKeyDown","CajaDetallesList","irCaja","updateUltimoVuelto","ultimo_vuelto","queryParameters","URLSearchParams","search","getCaja","ultimoVuelto","printFactura","razonSocial","numeroComprobante","comprobante","arrayIDsDetalles","record","cajaDetalles","ids","openPrintFactura","reject","table","createElement","headerRow","th","colSpan","textContent","nombreEmpresa","appendChild","REACT_APP_FACTURA_HEADERS","header","row","td","printWindow","write","outerHTML","print","close","marginLeft","datalistTotales","CajaConfigForm","CajasConfigList","ClienteForm","ClienteList","TimbradoForm","onChangeNumero","onChangeComprobante","onChangeNombreEmpresa","onChangeVencimiento","vencimiento","isClearable","SwitchList","nameToggle","idToggle","onToggle","TimbradosList","onChangeCheckList","user","dateExpira","expiraString","getDate","CajaFacturasList","irCajas","inventariousage","datalistDetalle","server","Login","setToken","setNickname","setPassword","handleSubmit","loginUser","token","msg","credentials","fetch","method","headers","body","JSON","stringify","json","formIniciarSession","action","jwt","REACT_APP_JWTKEY","App","setCurrentUser","tokenString","getItem","userToken","parse","getToken","setItem","getUsername","userName","username","useToken","verify","decoded","menu_admin","exact","menu_cajero","Provider","menu","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e283d92b.chunk.js","sourcesContent":["export function getDiv(numero){\r\n    let numero_al = numero.trim().replaceAll('.','');\r\n    let total = 0;\r\n    let k = 2;\r\n    for (let index = numero_al.length-1; index >= 0; index--){\r\n        const element = numero_al[index];\r\n        total += parseInt(element) * k;\r\n        k++; \r\n    }\r\n    let resto = total % 11;\r\n    let digito = 0;\r\n    if(resto > 1){\r\n        digito = 11 - resto \r\n    }else{\r\n        digito = 0 \r\n    }\r\n    return digito;\r\n}\r\n\r\nexport function convertMiles(nStr) {    \r\n    nStr += '';\r\n    nStr = nStr.replace('.',',');\r\n    if(nStr.indexOf(\",\")>-1){\r\n        nStr = nStr.substring(0, nStr.indexOf(\",\") + 3);\r\n    }\r\n    var x = nStr.split('.');\r\n    var x1 = x[0];\r\n    var rgx = /(\\d+)(\\d{3})/;\r\n    while (rgx.test(x1)) {\r\n            x1 = x1.replace(rgx, '$1.$2');\r\n    }    \r\n    return ( x1 === 'null' ? '' : x1);\r\n}\r\n\r\nexport function convertMilesSinDecimales(nStr) {    \r\n    nStr += '';\r\n    nStr = nStr.split('.')[0];\r\n    nStr = nStr.replace('.',',');\r\n    if(nStr.indexOf(\",\")>-1){\r\n        nStr = nStr.substring(0, nStr.indexOf(\",\") + 3);\r\n    }\r\n    var x = nStr.split('.');\r\n    var x1 = x[0];\r\n    var rgx = /(\\d+)(\\d{3})/;\r\n    while (rgx.test(x1)) {\r\n            x1 = x1.replace(rgx, '$1.$2');\r\n    }    \r\n    return ( x1 === 'null' ? '' : x1);\r\n}","export default __webpack_public_path__ + \"static/media/LogoDRDistribuidora.1125918a.PNG\";","\r\nexport default function logout() {\r\n    localStorage.removeItem('tokenKH');\r\n    window.location = '/';\r\n    return \"\"\r\n}","import { useState }  from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n//import companyLogo from '../../imagens/logo_150x350.png';\r\nimport companyLogo from '../../imagens/LogoDRDistribuidora.PNG';\r\n    \r\nimport logout from '../login/logout';\r\n\r\nconst NavbarTop = (props) =>{\r\n    return(\r\n        <div className=\"navigation-top pr-3\" id=\"nav\">\r\n            <ul className=\"nav-wrapper-top\">\r\n                {props.children}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\nconst NavbarTopItem = (props) =>{\r\n    const [open, setOpen] = useState(false);  \r\n    var varid = ( props.id  ? { id:props.id } : '');\r\n\r\n    if(props.id === \"account\"){\r\n        return (        \r\n            <li className=\"nav-wrapper-top-item\">\r\n                <span {...varid}  href=\"#\" className=\"icon-button\" >\r\n                    <FontAwesomeIcon icon={ props.icon }  />\r\n                    {props.children}\r\n                </span>\r\n            </li>\r\n        )\r\n    }\r\n    if(props.id === \"closesession\"){\r\n        return (        \r\n            <li className=\"nav-wrapper-top-item\">\r\n                <button {...varid}  href=\"#\" className=\"btn btn-warning btn-sm\" onClick={() => logout()}>\r\n                    <FontAwesomeIcon icon={ props.icon }  /> {props.children}\r\n                </button>\r\n            </li>\r\n        )\r\n    }\r\n    return (        \r\n        <li className=\"nav-wrapper-top-item\">\r\n            <a {...varid}  href=\"/#\" className=\"icon-button\" onClick={() => setOpen(!open)}>\r\n                <FontAwesomeIcon icon={ props.icon }  /> \r\n            </a>\r\n            {open && props.children }\r\n        </li>\r\n    )\r\n}\r\n\r\nconst Navbar = (props) =>{\r\n    return(\r\n        <div className=\"nav-wrapper\">\r\n            <div className=\"logo-wrapper\">\r\n                <a href = \"/\" >\r\n                    <img src={companyLogo} alt=\"Know How\"/>                \r\n                </a>\r\n            </div>\r\n            <div className=\"navigation\" id=\"nav\">\r\n                {props.children}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst NavBarItemFolder = (props) => {\r\n    if(props.class === \"account\"){\r\n        return(\r\n            <div className=\"nav-item\">\r\n                <div className=\"sub-nav\" style={{display:'block'}}>\r\n                    {props.children}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n   \r\n    return(\r\n        <div className=\"nav-item active\">\r\n            <span className={`nav-list-item ${props.class ? props.class : ''}`}><FontAwesomeIcon icon={ props.icon }  /> {props.name}</span>\r\n            <div className=\"sub-nav\" style={{display:'block'}}>\r\n                {props.children}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst NavBarItem = (props) => {\r\n    return(\r\n        <a className=\"sub-nav-item\" href={props.path}><FontAwesomeIcon icon={ props.icon }  /> {props.name}</a>\r\n    )\r\n}\r\nexport { Navbar, NavBarItemFolder, NavBarItem, NavbarTop, NavbarTopItem }","import { createContext } from \"react\";\r\n//this export from to hooks\r\nexport const UserContext = createContext({\r\n    currentUser: {}\r\n});\r\n\r\n\r\n//this export from to class\r\nexport default UserContext;\r\n","import { useContext } from 'react';\r\nimport { NavbarTop, NavbarTopItem } from './navbar.component';\r\nimport { faUser, faArrowRightFromBracket} from '@fortawesome/free-solid-svg-icons';\r\nimport { UserContext } from '../../UserContext';\r\nimport moment from 'moment';\r\n\r\nconst NavbarTopMenu = (props) =>{\r\n    const currentUser = useContext(UserContext).currentUser;\r\n    return(\r\n        <div>\r\n            <NavbarTop>\r\n                <NavbarTopItem icon={faUser} id=\"account\"  ><p className='mb-0'><b>{currentUser.name} </b>  logueado en {moment(currentUser.fecha).format(\"DD/MM/YYYY\")}</p></NavbarTopItem>\r\n                <NavbarTopItem icon={faArrowRightFromBracket} id=\"closesession\" > Cerrar Session</NavbarTopItem>\r\n            </NavbarTop>            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport { NavbarTopMenu }\r\n","import { useContext } from 'react';\r\nimport { Navbar, NavBarItemFolder, NavBarItem } from './navbar.component';\r\nimport { faGripHorizontal, faWarehouse, faUserGear, faGear, faList, faUsers, faTruck, faBoxesStacked, faBox, faUserSecret, faCartShopping } from '@fortawesome/free-solid-svg-icons';\r\nimport { UserContext } from '../../UserContext';\r\nimport { NavbarTopMenu } from './navbar-top';\r\n\r\nconst Menu = (props) =>{\r\n    const currentUser = useContext(UserContext).currentUser;\r\n    return(\r\n        <div>\r\n            <NavbarTopMenu />\r\n            <Navbar>\r\n                <div className=\"nav-item\">\r\n                    <span className=\"nav-list-item title\" style={{display:'block'}}>\r\n                        Facturacion - Inventario\r\n                    </span>\r\n                </div>\r\n\r\n                <NavBarItemFolder icon={faList} name=\"General\">\r\n                    <NavBarItem icon={faGripHorizontal} name=\"Dashboard\" path=\"/Dashboard\" />\r\n                    <NavBarItem icon={faBox} name=\"Caja\" path=\"/Caja\" />                    \r\n                </NavBarItemFolder>\r\n\r\n                {\r\n                    currentUser.roles.includes('ADM') &&\r\n                        <NavBarItemFolder icon={faGear} name=\"Configuraciones\"> \r\n                            <NavBarItem icon={faWarehouse} name=\"Inventario\" path=\"/Inventario\" /> \r\n                            <NavBarItem icon={faUsers} name=\"Clientes\" path=\"/Clientes\" /> \r\n                            <NavBarItem icon={faTruck} name=\"Proveedores\" path=\"/Proveedores\" /> \r\n                            <NavBarItem icon={faCartShopping} name=\"Compras\" path=\"/Compras\" /> \r\n                            {/* <NavBarItem icon={faBoxesStacked} name=\"Cajas\" path=\"/CajasConfig\" />  */}\r\n                            <NavBarItem icon={faUserGear} name=\"Usuarios\" path=\"/Usuarios\" /> \r\n                            <NavBarItem icon={faWarehouse} name=\"Timbrados\" path=\"/Timbrados\" /> \r\n                        </NavBarItemFolder>\r\n                }\r\n            </Navbar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { Menu }\r\n","import { registerLocale, setDefaultLocale } from  \"react-datepicker\";\r\nimport es from \"date-fns/locale/es\";\r\nimport buildLocalizeFn from 'date-fns/locale/_lib/buildLocalizeFn';\r\n  \r\n  const dayValues = {\r\n    narrow: [\"D\",\"L\", \"M\", \"М\", \"J\", \"V\", \"S\"],\r\n    abbreviated: [\r\n      \"Do\",\r\n      \"Lu\",\r\n      \"Ma\",\r\n      \"Mi\",\r\n      \"Ju\",\r\n      \"Vi\",\r\n      \"Sa\"\r\n    ],\r\n    wide: [\r\n      \"Domingo\",\r\n      \"Lunes\",\r\n      \"Martes\",\r\n      \"Miercoles\",\r\n      \"Jueves\",\r\n      \"Viernes\",\r\n      \"Sabado\"\r\n    ]\r\n  };\r\n\r\n  const monthValues = {\r\n    narrow: [\"E\", \"F\", \"М\", \"А\", \"М\", \"J\", \"J\", \"A\", \"S\", \"О\", \"N\", \"D\"],\r\n    abbreviated: [\r\n      \"Ene\",\r\n      \"Feb\",\r\n      \"Mar\",\r\n      \"Abr\",\r\n      \"May\",\r\n      \"Jun\",\r\n      \"Jul\",\r\n      \"Ago\",\r\n      \"Set\",\r\n      \"Oct\",\r\n      \"Nov\",\r\n      \"Dic\"\r\n    ],\r\n    wide: [\r\n      \"Enero\",\r\n      \"Febrero\",\r\n      \"Marzo\",\r\n      \"Abril\",\r\n      \"Mayo\",\r\n      \"Junio\",\r\n      \"Julio\",\r\n      \"Agosto\",\r\n      \"Setiembre\",\r\n      \"Octubre\",\r\n      \"Noviembre\",\r\n      \"Diciembre\"\r\n    ]\r\n  };\r\n  \r\n  es.localize.month = buildLocalizeFn({\r\n    values: monthValues,\r\n    defaultWidth: 'wide',\r\n    defaultFormattingWidth: 'wide'\r\n  });\r\n\r\n  es.localize.day = buildLocalizeFn({\r\n    values: dayValues,\r\n    defaultWidth: 'abbreviated',\r\n    defaultFormattingWidth: 'abbreviated'\r\n  });\r\n\r\nregisterLocale('esp',es);\r\nsetDefaultLocale('esp');\r\n","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport DatePicker from 'react-datepicker';\r\nimport Chart from \"react-apexcharts\";\r\nimport Select from 'react-select';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nconst { convertMilesSinDecimales } = require('../../utils/utils.js')\r\n\r\nexport default class Dashboard extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            month: ['Enero','Febrero','Marzo','Abril','Mayo','Junio','Julio','Agosto','Setiembre','Octubre','Noviembre','Diciembre'],\r\n            reporteVentas: {},         \r\n            reporteVentas_totales_ventas:'',\r\n            reporteVentas_totales_productos: '',\r\n            reporteVentas_fechaDia: new Date(),\r\n            reporteVentas_fechaMes: new Date(),\r\n            reporteVentas_options: {},\r\n            reporteVentas_series: [],\r\n            reporteProductos:[],\r\n            reporteProductos_options: {},\r\n            reporteProductos_series: [],\r\n            datosCargadosSelected: {},\r\n            datosCargadosOptions: [],\r\n            chartProductos_height: '600px'\r\n        };\r\n    }\r\n\r\n    componentDidMount(){      \r\n        this.productosPorFecha();\r\n        this.productosMasVendidos();\r\n    }\r\n    onChangeReporteVentasFechaMes = (date) => {this.setState({reporteVentas_fechaMes: date}, () => this.reportePorMes())}    \r\n    onChangeReporteVentasFechaDia = (date) => {this.setState({reporteVentas_fechaDia: date}, () => this.reportePorDia())}    \r\n    onChangeDatosCargados = (selectedOption) => {\r\n        this.setState({datosCargadosSelected: selectedOption})\r\n        this.changeDatosCargados(selectedOption)\r\n    }\r\n\r\n    changeDatosCargados = (selectedOption) =>{\r\n        if(selectedOption.label.indexOf(\"Dia\")>-1){\r\n            this.reporteProductosPorDia(selectedOption.value)\r\n        }else if(selectedOption.label.indexOf(\"Mes\")>-1){\r\n            this.reporteProductosPorMes(selectedOption.value)\r\n        }else if(selectedOption.label.indexOf(\"Año\")>-1){\r\n            this.reporteProductosPorAnho(selectedOption.value)\r\n        }\r\n    }\r\n\r\n    productosMasVendidos =  () => {\r\n        axios.get(process.env.REACT_APP_SERVER_URL + \"/cajas-detalles/topMasVendidos/1\")\r\n            .then(res => {\r\n                this.setState({reporteProductos: res.data}, () => {this.reporteProductosPorDia()})\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n    \r\n    productosPorFecha =  () => {\r\n        axios.get(process.env.REACT_APP_SERVER_URL + \"/cajas-detalles/totalesPorMes/1\")\r\n            .then(res => {\r\n                this.setState({reporteVentas: res.data}, () => {this.reportePorDia(); document.querySelector('#dia-outlined').checked = true})\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n     reportePorDia = () =>{\r\n        document.querySelector('#datepicker_dia').classList.remove('d-none')\r\n        document.querySelector('#datepicker_mes').classList.add('d-none')\r\n        \r\n        let datosCargadosOptions = [];\r\n        let datosCargadosSelected = {};\r\n        let day = [];\r\n        let totalesPerDay = [];\r\n        let totalMes = 0;\r\n        let yearSelected = this.state.reporteVentas_fechaDia.getFullYear();\r\n        let monthSelected = this.state.reporteVentas_fechaDia.getMonth()+1;\r\n        this.state.reporteVentas.map(dataYear => {\r\n            dataYear._id.year === yearSelected && dataYear.monthlyusage.map(dataMonth => {\r\n                dataMonth.month === monthSelected && dataMonth.dailyusage.map(dataDayli => {\r\n                    datosCargadosOptions.push({value: dataDayli.day, label: 'Dia '+dataDayli.day})\r\n                    totalesPerDay.push(dataDayli.totalPrecio)\r\n                    day.push(dataDayli.day)\r\n                    totalMes += dataDayli.totalPrecio;\r\n                })\r\n            })\r\n        })\r\n        datosCargadosSelected = datosCargadosOptions[0];\r\n        this.changeDatosCargados(datosCargadosSelected)\r\n\r\n        let reporteVentas_options = {\r\n            chart: {id: \"basic-bar\",type: 'bar'},                \r\n            xaxis: {categories: day},\r\n            yaxis: {\r\n                labels: {\r\n                    formatter: function(val) {\r\n                        return \"Gs. \" + convertMilesSinDecimales(val)\r\n                    }\r\n                }\r\n            },\r\n            dataLabels: {\r\n                enabled: false\r\n            }\r\n        };\r\n        let reporteVentas_series = [\r\n            {name: \"Totales\",data: totalesPerDay}\r\n        ];\r\n        \r\n        this.setState({datosCargadosSelected, datosCargadosOptions, reporteVentas_options, reporteVentas_series, reporteVentas_totales_ventas: 'Gs. '+convertMilesSinDecimales(totalMes)})\r\n    }\r\n\r\n    reportePorMes = () =>{\r\n        document.querySelector('#datepicker_dia').classList.add('d-none')\r\n        document.querySelector('#datepicker_mes').classList.remove('d-none')\r\n\r\n        let datosCargadosOptions = [];\r\n        let datosCargadosSelected = {};\r\n        let month = [];\r\n        let totalesPerMonth = [];        \r\n        let totalAnho = 0;\r\n        let yearSelected = this.state.reporteVentas_fechaMes.getFullYear();\r\n\r\n        this.state.reporteVentas.map(dataYear => {\r\n            dataYear._id.year === yearSelected && dataYear.monthlyusage.map(dataMonth => {\r\n                let totales = 0;                \r\n                dataMonth.dailyusage.map(dataDayli => {\r\n                    totales += dataDayli.totalPrecio;\r\n                    totalAnho += dataDayli.totalPrecio;\r\n                })\r\n                totalesPerMonth.push(totales)\r\n                month.push(this.state.month[dataMonth.month-1])\r\n                datosCargadosOptions.push({value: dataMonth.month, label: 'Mes '+this.state.month[dataMonth.month-1]})\r\n            })\r\n        })\r\n\r\n        datosCargadosSelected = datosCargadosOptions[0];\r\n        this.changeDatosCargados(datosCargadosSelected)\r\n\r\n        let reporteVentas_options = {\r\n            chart: {id: \"basic-bar\",type: 'bar'},\r\n            xaxis: {categories: month},\r\n            yaxis: {\r\n                labels: {\r\n                    formatter: function(val) {\r\n                        return \"Gs. \" + convertMilesSinDecimales(val)\r\n                    }\r\n                }\r\n            },            \r\n            dataLabels: {\r\n                enabled: false\r\n            }\r\n        };\r\n        let reporteVentas_series = [\r\n            {name: \"Totales\",data: totalesPerMonth}\r\n        ];\r\n\r\n        this.setState({datosCargadosSelected, datosCargadosOptions, reporteVentas_options, reporteVentas_series, reporteVentas_totales_ventas: 'Gs. '+convertMilesSinDecimales(totalAnho)})\r\n    }\r\n    \r\n    reportePorAnho = () =>{\r\n        document.querySelector('#datepicker_dia').classList.add('d-none')\r\n        document.querySelector('#datepicker_mes').classList.add('d-none')\r\n\r\n        let datosCargadosOptions = [];\r\n        let datosCargadosSelected = {};\r\n        let year = [];\r\n        let totalesPerYear = [];        \r\n        let totalAnho = 0;\r\n        \r\n        this.state.reporteVentas.map(dataYear => {\r\n            let totales = 0;\r\n            dataYear.monthlyusage.map(dataMonth => {                \r\n                dataMonth.dailyusage.map(dataDayli => {\r\n                    totales += dataDayli.totalPrecio;\r\n                    totalAnho += dataDayli.totalPrecio;\r\n                })                \r\n            })\r\n            totalesPerYear.push(totales)\r\n            year.push(dataYear._id.year)\r\n            datosCargadosOptions.push({value: dataYear._id.year, label: 'Año ' + dataYear._id.year})\r\n        })\r\n\r\n        datosCargadosSelected = datosCargadosOptions[0];\r\n        this.changeDatosCargados(datosCargadosSelected)\r\n\r\n        let reporteVentas_options = {\r\n            chart: {id: \"basic-bar\",type: 'bar'},\r\n            xaxis: {categories: year},\r\n            yaxis: {labels: {formatter: function(val) {return \"Gs. \" + convertMilesSinDecimales(val)}}},            \r\n            dataLabels: {enabled: false}\r\n        };\r\n        let reporteVentas_series = [{name: \"Totales\",data: totalesPerYear}];\r\n\r\n        this.setState({datosCargadosSelected, datosCargadosOptions, reporteVentas_options, reporteVentas_series, reporteVentas_totales_ventas: 'Gs. '+convertMilesSinDecimales(totalAnho)})\r\n    }\r\n\r\n    reporteProductosPorDia(daySelected){\r\n        \r\n        document.querySelector('#datepicker_dia').classList.remove('d-none')\r\n        document.querySelector('#datepicker_mes').classList.add('d-none')\r\n        let containsData = false;\r\n        let products = [];\r\n        let totalesPerDay = [];\r\n        let totalProducto = 0;\r\n        let yearSelected = this.state.reporteVentas_fechaDia.getFullYear();\r\n        let monthSelected = this.state.reporteVentas_fechaDia.getMonth()+1;\r\n             \r\n        this.state.reporteProductos.map(product => {\r\n            containsData = false;\r\n            product.yearlyusage.map(dataYear => {\r\n                dataYear.year === yearSelected && dataYear.monthlyusage.map(dataMonth => {\r\n                    dataMonth.month === monthSelected && dataMonth.dailyusage.map(dataDayli => {\r\n                        if(daySelected === undefined){daySelected = dataDayli.day;}                        \r\n                        if(dataDayli.day === daySelected){\r\n                            totalesPerDay.push(dataDayli.totalPrecio)\r\n                            totalProducto += dataDayli.totalPrecio;   \r\n                            containsData = true;             \r\n                        }                       \r\n                    })\r\n                })\r\n            })\r\n\r\n            if(containsData){\r\n                products.push(product._id.inventario[0])                \r\n            }\r\n        })\r\n\r\n        let reporteProductos_options = {\r\n            chart: {id: \"basic-bar-2\",type: 'bar'}, \r\n            plotOptions: {bar: {horizontal: true}},               \r\n            xaxis: {categories: products,labels: {formatter: function(val) {return \"Gs. \" + convertMilesSinDecimales(val)}}},\r\n            yaxis: {labels: {formatter: function(val) {return \"\" + convertMilesSinDecimales(val)}}},\r\n            dataLabels: {enabled: false}\r\n        };\r\n        let reporteProductos_series = [\r\n            {name: \"Totales\",data: totalesPerDay}\r\n        ];        \r\n        \r\n        this.setState({chartProductos_height: '600px',reporteProductos_options, reporteProductos_series, reporteVentas_totales_productos: 'Gs. '+convertMilesSinDecimales(totalProducto)})\r\n    }\r\n\r\n    reporteProductosPorMes(monthSelected){\r\n        document.querySelector('#datepicker_dia').classList.remove('d-none')\r\n        document.querySelector('#datepicker_mes').classList.add('d-none')\r\n        let containsData = false;\r\n        let products = [];\r\n        let totalProductoPerMonth = 0;\r\n        let totalesPerMonth = [];\r\n        let totalProducto = 0;\r\n        let yearSelected = this.state.reporteVentas_fechaDia.getFullYear();\r\n             \r\n        this.state.reporteProductos.map(product => {\r\n            totalProductoPerMonth = 0;\r\n            containsData = false;\r\n            product.yearlyusage.map(dataYear => {\r\n                dataYear.year === yearSelected && dataYear.monthlyusage.map(dataMonth => {\r\n                    if(monthSelected === undefined){monthSelected = dataMonth.month;}\r\n                    dataMonth.month === monthSelected && dataMonth.dailyusage.map(dataDayli => {                                                \r\n                        totalProductoPerMonth += dataDayli.totalPrecio;\r\n                        totalProducto += dataDayli.totalPrecio;   \r\n                        containsData = true;\r\n                    })\r\n                })\r\n            })\r\n\r\n            if(containsData){\r\n                totalesPerMonth.push(totalProductoPerMonth)\r\n                products.push(product._id.inventario[0])\r\n            }\r\n        })\r\n\r\n        let reporteProductos_options = {\r\n            chart: {id: \"basic-bar-2\",type: 'bar'}, \r\n            plotOptions: {bar: {horizontal: true}},               \r\n            xaxis: {categories: products,labels: {formatter: function(val) {return \"Gs. \" + convertMilesSinDecimales(val)}}},\r\n            yaxis: {labels: {formatter: function(val) {return \"\" + convertMilesSinDecimales(val)}}},\r\n            dataLabels: {enabled: false}\r\n        };\r\n        let reporteProductos_series = [\r\n            {name: \"Totales\",data: totalesPerMonth}\r\n        ];        \r\n\r\n        this.setState({chartProductos_height: '1000px', reporteProductos_options, reporteProductos_series, reporteVentas_totales_productos: 'Gs. '+convertMilesSinDecimales(totalProducto)})\r\n    }\r\n\r\n    reporteProductosPorAnho(yearSelected){\r\n        document.querySelector('#datepicker_dia').classList.remove('d-none')\r\n        document.querySelector('#datepicker_mes').classList.add('d-none')\r\n        let containsData = false;\r\n        let products = [];\r\n        let totalProductoPerYear = 0;\r\n        let totalesPerYear = [];\r\n        let totalProducto = 0;\r\n             \r\n        this.state.reporteProductos.map(product => {\r\n            totalProductoPerYear = 0;\r\n            containsData = false;\r\n            product.yearlyusage.map(dataYear => {\r\n                if(yearSelected === undefined){yearSelected = dataYear.year;}\r\n                dataYear.year === yearSelected && dataYear.monthlyusage.map(dataMonth => {                    \r\n                    dataMonth.dailyusage.map(dataDayli => {                                                \r\n                        totalProductoPerYear += dataDayli.totalPrecio;\r\n                        totalProducto += dataDayli.totalPrecio;   \r\n                        containsData = true;\r\n                    })\r\n                })\r\n            })\r\n\r\n            if(containsData){\r\n                totalesPerYear.push(totalProductoPerYear)\r\n                products.push(product._id.inventario[0])\r\n            }\r\n        })\r\n\r\n        let reporteProductos_options = {\r\n            chart: {id: \"basic-bar-2\",type: 'bar', height: '1300px'}, \r\n            plotOptions: {bar: {horizontal: true}},               \r\n            xaxis: {categories: products,labels: {formatter: function(val) {return \"Gs. \" + convertMilesSinDecimales(val)}}},\r\n            yaxis: {labels: {formatter: function(val) {return \"\" + convertMilesSinDecimales(val)}}},\r\n            dataLabels: {enabled: false}\r\n        };\r\n        let reporteProductos_series = [\r\n            {name: \"Totales\",data: totalesPerYear}\r\n        ];        \r\n\r\n        this.setState({chartProductos_height: '1500px', reporteProductos_options, reporteProductos_series, reporteVentas_totales_productos: 'Gs. '+convertMilesSinDecimales(totalProducto)})\r\n    }\r\n\r\n\r\n    render(){       \r\n        return(\r\n            <div className=\"content-wrapper\" id=\"content\">\r\n                <h2>Dashboard</h2>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-header\">\r\n                                <div className=\"card-title row mb-0\">  \r\n                                    <div className=\"col-md-4\">Reporte de Ventas</div>\r\n                                    <div className=\"col-md-8 text-right\">\r\n                                        <input type=\"radio\" onClick={() => this.reportePorDia()} className=\"btn-check\" name=\"options-outlined\" id=\"dia-outlined\" autoComplete=\"off\" />\r\n                                        <label className=\"btn btn-outline\" htmlFor=\"dia-outlined\">Dia</label>\r\n                                        <input type=\"radio\" onClick={() => this.reportePorMes()} className=\"btn-check\" name=\"options-outlined\" id=\"mes-outlined\" autoComplete=\"off\" />\r\n                                        <label className=\"btn btn-outline\" htmlFor=\"mes-outlined\">Mes</label>\r\n                                        <input type=\"radio\" onClick={() => this.reportePorAnho()} className=\"btn-check\" name=\"options-outlined\" id=\"anho-outlined\" autoComplete=\"off\" />\r\n                                        <label className=\"btn btn-outline\" htmlFor=\"anho-outlined\">Año</label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"reportVentasPorDia card-body\">\r\n                                <div className='row'>\r\n                                    <div className=\"col-md-10 d-flex\">\r\n                                        <div className=\"d-flex\">\r\n                                            <h3 id='totales_ventas' className=\"text-bold text-lg\"><b>Total: {this.state.reporteVentas_totales_ventas}</b></h3>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div id='datepicker_dia' className=\"col-md-2\">\r\n                                        <DatePicker     \r\n                                            className=\"form-control\" \r\n                                            locale=\"esp\"\r\n                                            required\r\n                                            dateFormat=\"MMMM yyyy\"\r\n                                            showMonthYearPicker\r\n                                            selected={this.state.reporteVentas_fechaDia}\r\n                                            onChange={this.onChangeReporteVentasFechaDia}                                                                                   \r\n                                        /> \r\n                                    </div>\r\n                                    <div id='datepicker_mes' className=\"col-md-2 d-none\">\r\n                                        <DatePicker                                             \r\n                                            className=\"form-control\" \r\n                                            locale=\"esp\"\r\n                                            required\r\n                                            dateFormat=\"yyyy\"\r\n                                            showYearPicker={true}\r\n                                            selected={this.state.reporteVentas_fechaMes}\r\n                                            onChange={this.onChangeReporteVentasFechaMes}                                                                                   \r\n                                        /> \r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"position-relative mb-4\">\r\n                                    <Chart\r\n                                        options={this.state.reporteVentas_options}\r\n                                        series={this.state.reporteVentas_series}\r\n                                        type=\"bar\"\r\n                                        height={\"300px\"}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-12 mt-3\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-header\">\r\n                                <div className=\"card-title row mb-0\">  \r\n                                    <div className=\"col-md-12\">Productos Vendidos</div>                                    \r\n                                </div>\r\n                            </div>\r\n                            <div className=\"reportVentasPorProducto card-body\">\r\n                                <div className=\" row col-md-12\">\r\n                                    <div className=\"form-group col-md-4\">\r\n                                        <label>Datos Cargados: </label>\r\n                                        <Select               \r\n                                            noOptionsMessage={() => 'Cajas no Configuradas'}\r\n                                            value={this.state.datosCargadosSelected} \r\n                                            options={this.state.datosCargadosOptions} \r\n                                            onChange={this.onChangeDatosCargados}  \r\n                                            required/>\r\n                                    </div>  \r\n                                    <div className=\"form-group col-md-8\">\r\n                                        <h4 id='totales_ventas' className=\"text-bold text-lg\"><b>Total: {this.state.reporteVentas_totales_productos}</b></h4>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"position-relative mb-4\">\r\n                                    <Chart\r\n                                        id=\"chartProductos\"\r\n                                        options={this.state.reporteProductos_options}\r\n                                        series={this.state.reporteProductos_series}\r\n                                        type=\"bar\"\r\n                                        height={this.state.chartProductos_height}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>                \r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport Select from 'react-select';\r\nimport UserContext  from '../../UserContext';\r\nimport { NumericFormat } from 'react-number-format';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport default class CajaForm extends Component{\r\n    static contextType = UserContext;\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {  \r\n            fechaApertura: new Date(),            \r\n            fechaCierre: null,\r\n            cajaSelected: {},\r\n            cajaOptions: [],\r\n            montoApertura: '',\r\n            montoCierre: '',\r\n            user_created: '',\r\n            user_updated: '',\r\n            textButton:'Abrir',\r\n            titleForm: 'Abrir Caja',\r\n            idUpdate: 'NEW'\r\n        };        \r\n    }\r\n    \r\n    //Metodo que se ejecuta antes del render\r\n    componentDidMount(){\r\n        const currentUser = this.context.currentUser;\r\n        this.setState({user_created: currentUser.name, user_updated: currentUser.name});\r\n        this.getCajasConfigOptions(); //Obtener Cajas Config\r\n    }    \r\n\r\n    getCajasConfigOptions = async () => {\r\n        await axios.get(process.env.REACT_APP_SERVER_URL  + \"/cajas-config/\").then(response => {\r\n            let options = [];\r\n            if(response.data.length > 0 ){\r\n                response.data.forEach(element => {options.push({value:element._id,label:element.descripcion})});\r\n                this.setState({cajaSelected: options[0], cajaOptions: options});\r\n            }else{\r\n                this.setState({cajaSelected: {}, cajaOptions: []});\r\n            }\r\n        }).catch(err => console.log(err))\r\n    }\r\n    onChangeCajas = (selectedOption) => {this.setState({cajaSelected: selectedOption})}\r\n    onChangeMontoApertura = (e) => {this.setState({montoApertura: e.target.value})}\r\n    onChangeDescripcion = (e) => {this.setState({descripcion: e.target.value})}\r\n    \r\n    showNotification(isSuccess, message){    \r\n        document.querySelector('#alert').classList.replace('hide','show');\r\n        if(message !== ''){\r\n            document.querySelector('#alert').classList.replace('alert-success','alert-warning');\r\n            document.querySelector('#alert #text').innerHTML = '<strong>Atencion!</strong> ' + message\r\n        }else{\r\n            if(isSuccess === true){\r\n                document.querySelector('#alert').classList.replace('alert-warning','alert-success');\r\n                document.querySelector('#alert #text').innerHTML = '<strong>Exito!</strong> Los datos han sido actualizados.'\r\n            }else{\r\n                document.querySelector('#alert').classList.replace('alert-success','alert-warning');\r\n                document.querySelector('#alert #text').innerHTML = '<strong>Error!</strong> Contacte con el administrador.'\r\n            }\r\n        }\r\n        //Enfocar el input\r\n        //this._input.focus(); \r\n        //actualizar Lista\r\n        this.props.onUpdateParentList('true');\r\n        setTimeout(function(){  document.querySelector('#alert').classList.replace('show','hide'); }, 5000);\r\n    }\r\n\r\n    handleCloseAlert = () =>{\r\n        document.querySelector('#alert').classList.replace('show','hide');\r\n    }\r\n    \r\n    onSubtmit = async (e) => {\r\n        e.preventDefault();\r\n        \r\n        const isCerrado = await this.props.onParentVerificarCaja(this.state.cajaSelected.value);\r\n\r\n        if(isCerrado || isCerrado === undefined){\r\n             const caja = {\r\n                caja: this.state.cajaSelected.value,\r\n                estado: 'Abierto',\r\n                fechaApertura: this.state.fechaApertura,\r\n                montoApertura: this.state.montoApertura.replace(/\\./gi,''),\r\n                user_created: this.state.user_created,\r\n                user_updated: this.state.user_updated\r\n            }\r\n            axios.post(process.env.REACT_APP_SERVER_URL  + '/cajas/add',caja)\r\n                .then(res => this.showNotification(true))\r\n                .catch(err => this.showNotification(false));\r\n                this.setState({\r\n                    cajaSelected: this.state.cajaOptions[0],\r\n                    montoApertura: '',\r\n                    textButton:'Abrir',\r\n                    titleForm: 'Abrir Caja',\r\n                    idUpdate:'NEW'\r\n                })   \r\n        }else{\r\n            this.showNotification(false, \"Cierre la caja seleccionada antes de abrir otro.\")\r\n        }\r\n    }   \r\n    \r\n    render(){          \r\n        return(\r\n            <div className=\"container\"> \r\n                <h3>{this.state.titleForm}</h3>\r\n                <form onSubmit={this.onSubtmit}>\r\n                        <div className=\"row\">\r\n                            <div className=\"form-group col-md-12\">\r\n                                <label>Fecha Apertura: </label>                                    \r\n                                <input type=\"text\" \r\n                                    disabled\r\n                                    className=\"form-control\"\r\n                                    value={moment(this.state.fechaApertura).format(\"DD/MM/YYYY\")}\r\n                                />\r\n                            </div>    \r\n                            <div className=\"form-group col-md-12\">\r\n                                <label>Caja: </label>\r\n                                <Select               \r\n                                    noOptionsMessage={() => 'Cajas no Configuradas'}\r\n                                    value={this.state.cajaSelected} \r\n                                    options={this.state.cajaOptions} \r\n                                    onChange={this.onChangeCajas}  \r\n                                    required/>\r\n                            </div>                          \r\n                            <div className=\"form-group col-md-12\">\r\n                                <label>Monto Inicial: </label>\r\n                                <NumericFormat      \r\n                                    autoFocus={true}\r\n                                    thousandSeparator = \".\"\r\n                                    decimalSeparator = \",\"\r\n                                    className=\"form-control\"\r\n                                    value={this.state.montoApertura}\r\n                                    onChange={this.onChangeMontoApertura}\r\n                                    required\r\n                                />\r\n                            </div> \r\n                        </div>\r\n                    <div className=\"form-group\">\r\n                        <button type=\"submit\" className=\"btn btn-warning\"><FontAwesomeIcon icon={faArrowLeft}/> {this.state.textButton}</button>\r\n                    </div>        \r\n                    <div id=\"alert\" className=\"alert alert-success alert-dismissible fade hide\" role=\"alert\">\r\n                        <span id=\"text\"></span>\r\n                        <button type=\"button\" className=\"close\" onClick={this.handleCloseAlert}>\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n                    </div>                                \r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport CajaForm from './caja-form.component';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport moment from 'moment';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { convertMiles } from '../../utils/utils';\r\nimport UserContext  from '../../UserContext';\r\n\r\nexport default class CajaList extends Component{\r\n    static contextType = UserContext;\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            datos: [],\r\n            loading: true,\r\n            idUpdate: '',\r\n            didUpdate: true\r\n        }\r\n        this.datalist = this.datalist.bind(this);\r\n    }\r\n\r\n    updateList = async () => {\r\n        await axios.get(process.env.REACT_APP_SERVER_URL + \"/cajas\")\r\n            .then(response => {\r\n                this.setState({\r\n                    datos: response.data,\r\n                    loading: false\r\n                })                  \r\n            })\r\n            .catch(err => console.log(err))\r\n\r\n        //Pagina la lista\r\n        //window.paginar('list-group','list-group-item',true);\r\n    }\r\n\r\n    detallesFacturas = (dato) =>{\r\n        window.location.href = \"/CajaFacturas?id=\"+dato._id\r\n    }\r\n\r\n    componentDidMount(){this.updateList();}\r\n    detalles = (jsondatos) => {window.location = \"CajaDetalles?id=\"+jsondatos._id}    \r\n    createData = (id) => {this.setState({idUpdate: id})}\r\n    cerrarCaja = async (jsondatos) => {\r\n        //Cerrar Caja\r\n        let total_cierre_caja = 0;\r\n        await axios.get(process.env.REACT_APP_SERVER_URL + \"/cajas-detalles/estado/\"+jsondatos._id+\"/Facturado\")\r\n            .then(response => {\r\n                console.log(response.data)\r\n\r\n                response.data.map(data => {\r\n                    total_cierre_caja += data.total\r\n                })\r\n            })\r\n            .catch(err => console.log(err))\r\n\r\n        jsondatos.estado = \"Cerrado\";\r\n        jsondatos.montoCierre = total_cierre_caja;\r\n        console.log('jsondatos',jsondatos)\r\n        console.log('total_cierre_caja',total_cierre_caja)\r\n        \r\n        await axios.post(process.env.REACT_APP_SERVER_URL  + '/cajas/update/'+jsondatos._id,jsondatos)\r\n            .then(() => {\r\n                this.updateList();\r\n            })\r\n            .catch(err => alert(err));                    \r\n    }\r\n    datalist(){\r\n        return this.state.datos.map(dato => {\r\n            return (\r\n                <li className=\"list-group-item\" key={dato._id}>\r\n                    <div className=\"col-md-3\">{dato.cajaConf.descripcion} <br/>\r\n                        <div className={`alert alert-success-estado ${dato.estado === \"Abierto\" ? \"alert-success\" : \"alert-danger\"} `}>{dato.estado}</div> </div>\r\n                    <div className=\"col-md-2\">{moment(dato.fechaApertura).format(\"DD/MM/YYYY HH:mm:ss\")}</div>\r\n                    <div className=\"col-md-2\">{dato.fechaCierre && moment(dato.fechaCierre).format(\"DD/MM/YYYY HH:mm:ss\")}</div>\r\n                    <div className=\"col-md-3\">\r\n                        <b>Apertura:</b> {convertMiles(dato.montoApertura)+\" Gs.\"} <br/>\r\n                        <b>Cierre:</b> {dato.montoCierre && convertMiles(dato.montoCierre)+\" Gs.\"}\r\n                    </div>\r\n                    {dato.estado === \"Abierto\" &&\r\n                        <div className=\"col-md-2\">\r\n                            <button onClick={() => this.detalles(dato)} type=\"button\" className=\"btn btn-success btn-sm mr-1 mb-1\">Detalles</button>\r\n                            <button onClick={() => this.cerrarCaja(dato)} type=\"button\" className=\"btn btn-danger btn-sm mr-1\">Cerrar Caja</button>\r\n                        </div>\r\n                    }\r\n                    {dato.estado === \"Cerrado\" &&\r\n                        <div className=\"col-md-2\">\r\n                            <button onClick={() => this.detallesFacturas(dato)} type=\"button\" className=\"btn btn-success btn-sm mr-1 mb-1\">Facturas</button>\r\n                        </div>\r\n                    }\r\n                </li>)\r\n        })\r\n    }\r\n    verificarCaja = (id) => {\r\n        const isClosed = new Promise((resolve) => {\r\n            const isClosed = this.state.datos.map(dato => {\r\n                if(dato.cajaConf._id === id){\r\n                    if(dato.estado === \"Abierto\"){\r\n                        return false\r\n                    }else{\r\n                        return true\r\n                    }\r\n                }\r\n            })\r\n            resolve(isClosed[0])\r\n        })\r\n\r\n        return isClosed;\r\n    }\r\n\r\n    render(){       \r\n        return(\r\n            <div className=\"content-wrapper\" id=\"content\">\r\n                <h2>Cajas</h2>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-header\">\r\n                                <div className=\"card-title row mb-0\">  \r\n                                    <div className=\"col-md-3\">Descripcion - Estado</div>\r\n                                    <div className=\"col-md-2\">Fecha pertura</div>\r\n                                    <div className=\"col-md-2\">Fecha Cierre</div>\r\n                                    <div className=\"col-md-3\">Montos</div>\r\n                                    <div className=\"col-md-2 text-right\">\r\n                                        <button onClick={() => this.createData(\"NEW\")} type=\"button\" className=\"btn btn-warning btn-sm\"><FontAwesomeIcon icon={faPlus} /> Nuevo</button>\r\n                                    </div>                                 \r\n                                </div>\r\n                            </div>\r\n                            <input className=\"form-control inputsearch\" type=\"search\" placeholder=\"Busqueda (minimo 3 letras)...\" />\r\n                            <ul id=\"list\" className=\"list-group\">\r\n                                {this.state.loading  ? \r\n                                    <Spinner animation=\"border\" variant=\"primary\" style={{margin:\"25px\",alignSelf:\"center\"}}/> \r\n                                :\r\n                                    this.state.datos.length === 0 ?\r\n                                        <div className=\"col-md-12 text-center m-3\">Sin registros encontrados</div>\r\n                                    :\r\n                                        this.datalist()\r\n                                }\r\n                            </ul>                     \r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-4\">                        \r\n                            <CajaForm onUpdateParentList={this.updateList} onParentVerificarCaja={this.verificarCaja}/>                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport UserContext  from '../../UserContext';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport default class UsuariosForm extends Component{\r\n    static contextType = UserContext;\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {  \r\n            nickname: '',\r\n            nombre_completo: '',\r\n            password: '',\r\n            roles: process.env.REACT_APP_ROLES,\r\n            rolesSelected: [],\r\n            user_created: '',\r\n            user_updated: '',\r\n            textButton:'Crear',\r\n            titleForm: 'Crear Usuario',\r\n            idUpdate: 'NEW'\r\n        };        \r\n    }\r\n    getRolesSelected = (e) => { \r\n        //Limpiando primero\r\n        document.querySelectorAll('[type=checkbox]').forEach(item => item.checked = false)\r\n        this.state.rolesSelected.forEach(item => {\r\n            if(document.querySelector('#check_'+item)){\r\n                document.querySelector('#check_'+item).checked = true; \r\n            }\r\n        })\r\n    }\r\n     //Metodo que se ejecuta antes del render\r\n     componentDidMount(){\r\n        const currentUser = this.context.currentUser;\r\n        this.setState({user_created: currentUser.name, user_updated: currentUser.name}) \r\n        //this.setState({user_created: \"Administrador del Sistema\", user_updated: \"Administrador del Sistema\"}) \r\n\r\n        axios.get(process.env.REACT_APP_SERVER_URL + \"/roles/\"+this.props.idUpdate)\r\n            .then(response => {\r\n                this.setState({\r\n                    roles: response.data,\r\n                })\r\n            })\r\n            .catch(err => console.log(err));\r\n    } \r\n    \r\n    //Metodo que obtiene cualquier actualizacion de otros componentes donde fue llamado\r\n    componentDidUpdate(){        \r\n        if(this.state.idUpdate !== this.props.idUpdate ){\r\n            this.setState({ idUpdate: this.props.idUpdate});\r\n            if(this.props.idUpdate !== \"NEW\" && this.props.idUpdate !== \"\" ){\r\n                axios.get(process.env.REACT_APP_SERVER_URL + \"/usuarios/\"+this.props.idUpdate)\r\n                .then(response => {\r\n                    this.setState({\r\n                        nickname: response.data.nickname,\r\n                        nombre_completo: response.data.nombre_completo,\r\n                        password: response.data.password,\r\n                        rolesSelected: response.data.roles,\r\n                        textButton:'Editar',\r\n                        titleForm: 'Editar Usuario'\r\n                    }, () => this.getRolesSelected())\r\n                })\r\n                .catch(err => console.log(err));\r\n            }else{\r\n                this.setState({\r\n                    nickname: '',\r\n                    nombre_completo: '',\r\n                    password: '',\r\n                    textButton:'Crear',\r\n                    titleForm: 'Crear Usuario',\r\n                    idUpdate: this.props.idUpdate\r\n                });\r\n            }\r\n        }\r\n    }\r\n    onChangeNickname = (e) => {this.setState({nickname: e.target.value})}\r\n    onChangeNombreCompleto = (e) => {this.setState({nombre_completo: e.target.value})}\r\n    onChangePassword = (e) => {this.setState({password: e.target.value})}\r\n    \r\n    showNotification(isSuccess){\r\n        document.querySelector('#alert').classList.replace('hide','show');\r\n        if(isSuccess === true){\r\n            document.querySelector('#alert').classList.replace('alert-warning','alert-success');\r\n            document.querySelector('#alert #text').innerHTML = '<strong>Exito!</strong> Los datos han sido actualizados.'\r\n        }else{\r\n            document.querySelector('#alert').classList.replace('alert-success','alert-warning');\r\n            document.querySelector('#alert #text').innerHTML = '<strong>Error!</strong> Contacte con el administrador.'\r\n        }\r\n        //Enfocar el input\r\n        this._input.focus(); \r\n        //actualizar Lista\r\n        this.props.onUpdateParentList('true');\r\n        setTimeout(function(){  document.querySelector('#alert').classList.replace('show','hide'); }, 3000);\r\n    }\r\n\r\n    handleCloseAlert = () =>{\r\n        document.querySelector('#alert').classList.replace('show','hide');\r\n    }\r\n    roleslist = () => {  \r\n        return this.state.roles && this.state.roles.map((rol,index) => {\r\n            return (<li className=\"list-group-item list-group-item-roles \" key={\"key-\"+index}>\r\n                    <div className=\"col-md-5\">\r\n                        <input className=\"form-check-input\" type=\"checkbox\" value={rol.rol} id={\"check_\"+rol.rol}></input>\r\n                        {rol.rol}\r\n                    </div>\r\n                    <div className=\"col-md-7\">{rol.descripcion}</div>\r\n                </li>)\r\n        })\r\n    }\r\n    \r\n    onSubtmit = (e) => {\r\n        e.preventDefault();\r\n        let rolesSelected = [];\r\n        document.querySelectorAll(\"[type='checkbox']:checked\").forEach((item) => {rolesSelected.push(item.value)});\r\n\r\n        if(this.props.idUpdate === \"NEW\" || this.props.idUpdate === \"\" ){\r\n            const usuario = {\r\n                nickname: this.state.nickname,\r\n                nombre_completo: this.state.nombre_completo,\r\n                password: this.state.password,\r\n                roles: rolesSelected,\r\n                user_created: this.state.user_created,\r\n                user_updated: this.state.user_updated\r\n            }\r\n            axios.post(process.env.REACT_APP_SERVER_URL + '/usuarios/add',usuario)\r\n                .then(res => this.showNotification(true))\r\n                .catch(err => this.showNotification(false));\r\n             \r\n            this.setState({\r\n                nickname: '',\r\n                nombre_completo: '',\r\n                password: '',\r\n                rolesSelected: [],\r\n                textButton:'Crear',\r\n                titleForm: 'Crear Usuario',\r\n                idUpdate:'NEW'\r\n            })     \r\n        }else{\r\n            const usuario = {\r\n                nickname: this.state.nickname,\r\n                nombre_completo: this.state.nombre_completo,\r\n                password: this.state.password,\r\n                roles: rolesSelected,\r\n                user_updated: this.state.user_updated\r\n            }\r\n            axios.post(process.env.REACT_APP_SERVER_URL + '/usuarios/update/'+this.state.idUpdate,usuario)\r\n                .then(res => this.showNotification(true))\r\n                .catch(err => this.showNotification(false));\r\n        }\r\n\r\n    }   \r\n\r\n    \r\n    render(){          \r\n        return(\r\n            <div className=\"container\"> \r\n                <h3>{this.state.titleForm}</h3>\r\n                <form onSubmit={this.onSubtmit}>\r\n                    <div className=\"row\">\r\n                        <div className=\"form-group col-md-12\">\r\n                            <label>Nombre Completo: </label>\r\n                            <input type=\"text\" \r\n                                autoFocus={true}\r\n                                ref={c => (this._input = c)}\r\n                                required\r\n                                className=\"form-control\"\r\n                                value={this.state.nombre_completo}\r\n                                onChange={this.onChangeNombreCompleto}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group col-md-6\">\r\n                            <label>Nickname: </label>\r\n                            <input type=\"text\" \r\n                                required\r\n                                className=\"form-control\"\r\n                                value={this.state.nickname}\r\n                                onChange={this.onChangeNickname}\r\n                            />\r\n                        </div>      \r\n                        <div className=\"form-group col-md-6\">\r\n                            <label>Password: </label>\r\n                            <input type=\"password\" \r\n                                required\r\n                                className=\"form-control\"\r\n                                value={this.state.password}\r\n                                onChange={this.onChangePassword} \r\n                            />\r\n                        </div>\r\n                        <div className=\"col-md-12\">                                                      \r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\">\r\n                                    <div className=\"card-title d-flex\">  \r\n                                        <div className=\"col-md-1\"></div>\r\n                                        <div className=\"col-md-4\">Rol</div>\r\n                                        <div className=\"col-md-7\">Descripcion</div>  \r\n                                    </div>                              \r\n                                </div>\r\n                                <ul id=\"list\" className=\"list-group\">\r\n                                    {this.roleslist()}  \r\n                                </ul>\r\n                            </div>                            \r\n                        </div>  \r\n                    </div>\r\n                    <br />\r\n                    <div className=\"form-group\">\r\n                        <button type=\"submit\" className=\"btn btn-warning\"><FontAwesomeIcon icon={faArrowLeft}/> {this.state.textButton}</button>\r\n                    </div>        \r\n                    <div id=\"alert\" className=\"alert alert-success alert-dismissible fade hide\" role=\"alert\">\r\n                        <span id=\"text\"></span>\r\n                        <button type=\"button\" className=\"close\" onClick={this.handleCloseAlert}>\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n                    </div>                                \r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport UsuariosForm from './usuarios-form.component';\r\nimport { Spinner } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faPlus, faEdit, faTrash, faExclamationCircle} from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport default class UsuariosList extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            datos: [],\r\n            loading: true,\r\n            idUpdate: '',\r\n            didUpdate: true\r\n        }\r\n        this.datalist = this.datalist.bind(this);\r\n    }\r\n\r\n    updateList = async () => {\r\n        await axios.get(process.env.REACT_APP_SERVER_URL + \"/usuarios/\")\r\n            .then(response => {\r\n                this.setState({\r\n                    datos: response.data,\r\n                    loading: false\r\n                })  \r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    componentDidMount(){      \r\n        this.updateList();\r\n    }\r\n    \r\n    deleteData = async (jsondatos) => {\r\n        await axios.delete(process.env.REACT_APP_SERVER_URL + \"/usuarios/\"+jsondatos._id)\r\n            .then(res => console.log(res.data))\r\n            .catch(err => console.log(err))\r\n\r\n        this.setState({\r\n            datos: this.state.datos.filter(el => el._id !== jsondatos._id)\r\n        });\r\n    }\r\n\r\n    updateData = (jsondatos) => {this.setState({idUpdate: jsondatos._id})}\r\n    createData = (id) => {this.setState({idUpdate: id})}\r\n\r\n    datalist(){\r\n        return this.state.datos.map(dato => {\r\n            return (\r\n                <li className=\"list-group-item\" key={dato._id}>\r\n                    <div className=\"col-md-2\">{dato.nickname}</div>\r\n                    <div className=\"col-md-5\">{dato.nombre_completo}</div>\r\n                    <div className=\"col-md-3\">{dato.roles.join(', ')}</div>\r\n                    <div className=\"col-md-2 text-right\">\r\n                        <button onClick={() => this.updateData(dato)} type=\"button\" className=\"btn btn-light btn-sm mr-1\"><FontAwesomeIcon icon={faEdit} /></button>\r\n                        <button onClick={() => this.deleteData(dato)} type=\"button\" className=\"btn btn-danger btn-sm\"><FontAwesomeIcon icon={faTrash} /></button>\r\n                    </div>\r\n                </li>)\r\n        })\r\n    }\r\n    render(){       \r\n        return(\r\n            <div className=\"content-wrapper\" id=\"content\">\r\n                <h2>Usuarios</h2>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8\">\r\n                        <div className=\"alert alert-warning\">\r\n                            <FontAwesomeIcon icon={faExclamationCircle} /> Para ver los cambios cierre session y vuelva a ingresar\r\n                        </div>\r\n                        <div className=\"card\">\r\n                            <div className=\"card-header\">\r\n                                <div className=\"card-title row mb-0\">  \r\n                                    <div className=\"col-md-2\">Nickname</div>\r\n                                    <div className=\"col-md-5\">Nombre Completo</div>\r\n                                    <div className=\"col-md-3\">Roles</div>\r\n                                    <div className=\"col-md-2 text-right\">\r\n                                        <button onClick={() => this.createData(\"NEW\")} type=\"button\" className=\"btn btn-warning btn-sm\"><FontAwesomeIcon icon={faPlus} /> Nuevo</button>\r\n                                    </div>                                 \r\n                                </div>\r\n                            </div>\r\n                            <input className=\"form-control inputsearch\" type=\"search\" placeholder=\"Busqueda (minimo 3 letras)...\" />\r\n                            <ul id=\"list\" className=\"list-group\">\r\n                                {this.state.loading  ? \r\n                                    <Spinner animation=\"border\" variant=\"primary\" style={{margin:\"25px\",alignSelf:\"center\"}}/> \r\n                                :\r\n                                    this.state.datos.length === 0 ?\r\n                                        <div className=\"col-md-12 text-center m-3\">Sin registros encontrados</div>\r\n                                    :\r\n                                        this.datalist()\r\n                                }\r\n                            </ul>                     \r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <UsuariosForm idUpdate={this.state.idUpdate} onUpdateParentList={this.updateList}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport UserContext  from '../../UserContext';\r\nimport { NumericFormat } from 'react-number-format';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport default class InventarioForm extends Component{\r\n    static contextType = UserContext;\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {  \r\n            codigo:'',\r\n            descripcion: '',\r\n            cantidad: '0',\r\n            precio_costo: '0',\r\n            precio_venta: '0',\r\n            user_created: '',\r\n            user_updated: '',\r\n            textButton:'Crear',\r\n            titleForm: 'Crear Inventario',\r\n            idUpdate: 'NEW'\r\n        };        \r\n    }\r\n     //Metodo que se ejecuta antes del render\r\n     componentDidMount(){\r\n        const currentUser = this.context.currentUser;\r\n        this.setState({user_created: currentUser.name, user_updated: currentUser.name}) \r\n    }\r\n\r\n    //Metodo que obtiene cualquier actualizacion de otros componentes donde fue llamado\r\n    componentDidUpdate(){        \r\n        if(this.state.idUpdate !== this.props.idUpdate ){\r\n            this.setState({ idUpdate: this.props.idUpdate});\r\n            if(this.props.idUpdate !== \"NEW\" && this.props.idUpdate !== \"\" ){\r\n                axios.get(process.env.REACT_APP_SERVER_URL + \"/inventarios/\"+this.props.idUpdate)\r\n                .then(response => {\r\n                    this.setState({\r\n                        codigo: response.data.codigo,    \r\n                        descripcion: response.data.descripcion,   \r\n                        cantidad: response.data.cantidad,   \r\n                        precio_costo: response.data.precio_costo,   \r\n                        precio_venta: response.data.precio_venta,\r\n                        textButton:'Editar',\r\n                        titleForm: 'Editar Inventario'\r\n                    })\r\n                })\r\n                .catch(err => console.log(err));\r\n            }else{\r\n                this.setState({\r\n                    codigo:'',\r\n                    descripcion:'',\r\n                    cantidad: '0',\r\n                    precio_costo: '0',\r\n                    precio_venta: '0',\r\n                    textButton:'Crear',\r\n                    titleForm: 'Crear Inventario',\r\n                    idUpdate: this.props.idUpdate\r\n                });\r\n            }\r\n        }\r\n    }    \r\n    \r\n    onChangeCodigo = (e) => {this.setState({codigo: e.target.value})}\r\n    onChangeDescripcion = (e) => {this.setState({descripcion: e.target.value})}\r\n    onChangePrecioCosto = (e) => {this.setState({precio_costo: e.target.value})}\r\n    onChangePrecioVenta = (e) => {this.setState({precio_venta: e.target.value})}\r\n    onChangeCantidad = (e) => {this.setState({cantidad: e.target.value})}  \r\n\r\n    showNotification(isSuccess){\r\n        document.querySelector('#alert').classList.replace('hide','show');\r\n        if(isSuccess === true){\r\n            document.querySelector('#alert').classList.replace('alert-warning','alert-success');\r\n            document.querySelector('#alert #text').innerHTML = '<strong>Exito!</strong> Los datos han sido actualizados.'\r\n        }else{\r\n            document.querySelector('#alert').classList.replace('alert-success','alert-warning');\r\n            document.querySelector('#alert #text').innerHTML = '<strong>Error!</strong> Contacte con el administrador.'\r\n        }\r\n        //Enfocar el input\r\n        this._input.focus(); \r\n        //actualizar Lista\r\n        this.props.onUpdateParentList('true');\r\n        setTimeout(function(){  document.querySelector('#alert').classList.replace('show','hide'); }, 3000);\r\n    }\r\n\r\n    handleCloseAlert = () =>{\r\n        document.querySelector('#alert').classList.replace('show','hide');\r\n    }\r\n    \r\n    onSubtmit = (e) => {\r\n        e.preventDefault();\r\n        if(this.props.idUpdate === \"NEW\" || this.props.idUpdate === \"\" ){\r\n            const inventario = {\r\n                codigo: this.state.codigo,\r\n                descripcion: this.state.descripcion,\r\n                cantidad: parseInt(this.state.cantidad.replace(/\\./gi,'')),\r\n                precio_costo: parseInt(this.state.precio_costo.replace(/\\./gi,'')),\r\n                precio_venta: parseInt(this.state.precio_venta.replace(/\\./gi,'')),\r\n                user_created: this.state.user_created,\r\n                user_updated: this.state.user_updated\r\n            }\r\n\r\n            console.log('Inventario',inventario)\r\n            axios.post(process.env.REACT_APP_SERVER_URL + '/inventarios/add',inventario)\r\n                .then(res => this.showNotification(true))\r\n                .catch(err => this.showNotification(false));\r\n\r\n                this.setState({\r\n                    codigo:'',\r\n                    descripcion: '',\r\n                    cantidad: '0',\r\n                    precio_costo: '0',\r\n                    precio_venta: '0',\r\n                    textButton:'Crear',\r\n                    titleForm: 'Crear Inventario',\r\n                    idUpdate:'NEW'\r\n                })\r\n                   \r\n        }else{\r\n            const inventario = {\r\n                codigo: this.state.codigo,\r\n                descripcion: this.state.descripcion,\r\n                cantidad: this.state.cantidad && parseInt((this.state.cantidad+\"\").replace(/\\./gi,'')),\r\n                precio_costo: this.state.precio_costo && parseInt((this.state.precio_costo+\"\").replace(/\\./gi,'')),\r\n                precio_venta: parseInt((this.state.precio_venta+\"\").replace(/\\./gi,'')),\r\n                user_updated: this.state.user_updated\r\n            }\r\n            axios.post(process.env.REACT_APP_SERVER_URL+ '/inventarios/update/'+this.state.idUpdate,inventario)\r\n                .then(res => this.showNotification(true))\r\n                .catch(err => this.showNotification(false));\r\n        }\r\n\r\n        \r\n    }   \r\n    \r\n    render(){          \r\n        return(\r\n            <div className=\"container\"> \r\n                <h3>{this.state.titleForm}</h3>\r\n                <form onSubmit={this.onSubtmit}>\r\n                        <div className=\"row\">\r\n                            <div className=\"form-group col-md-12\">\r\n                                <label>Codigo Barra (Requerido 5 caracteres): </label>\r\n                                <input type=\"text\" \r\n                                    autoFocus={true}\r\n                                    ref={c => (this._input = c)}\r\n                                    required\r\n                                    maxLength={5} \r\n                                    className=\"form-control\"\r\n                                    value={this.state.codigo}\r\n                                    onChange={this.onChangeCodigo}\r\n                                />\r\n                            </div>   \r\n                            <div className=\"form-group col-md-12\">\r\n                                <label>Descripcion: </label>\r\n                                <input type=\"text\" \r\n                                    required\r\n                                    className=\"form-control\"\r\n                                    value={this.state.descripcion}\r\n                                    onChange={this.onChangeDescripcion} \r\n                                />\r\n                            </div>                                                       \r\n                            <div className=\"form-group col-md-4\">\r\n                                <label>Cantidad: </label>\r\n                                <NumericFormat \r\n                                    disabled\r\n                                    thousandSeparator = \".\"\r\n                                    decimalSeparator = \",\"\r\n                                    className=\"form-control\"\r\n                                    value={this.state.cantidad}\r\n                                    onChange={this.onChangeCantidad}\r\n                                    required\r\n                                />\r\n                            </div>  \r\n                            <div className=\"form-group col-md-4\">\r\n                                <label>Precio Costo: </label>\r\n                                <NumericFormat \r\n                                    disabled\r\n                                    thousandSeparator = \".\"\r\n                                    decimalSeparator = \",\"\r\n                                    className=\"form-control\"\r\n                                    value={this.state.precio_costo}\r\n                                    onChange={this.onChangePrecioCosto}\r\n                                    required\r\n                                />\r\n                            </div> \r\n                            <div className=\"form-group col-md-4\">\r\n                                <label>Precio Venta: </label>\r\n                                <NumericFormat \r\n                                    thousandSeparator = \".\"\r\n                                    decimalSeparator = \",\"\r\n                                    className=\"form-control\"\r\n                                    value={this.state.precio_venta}\r\n                                    onChange={this.onChangePrecioVenta}\r\n                                    required\r\n                                />\r\n                            </div> \r\n                        </div>\r\n                    <div className=\"form-group\">\r\n                        <button type=\"submit\" className=\"btn btn-warning\"><FontAwesomeIcon icon={faArrowLeft}/> {this.state.textButton}</button>\r\n                    </div>        \r\n                    <div id=\"alert\" className=\"alert alert-success alert-dismissible fade hide\" role=\"alert\">\r\n                        <span id=\"text\"></span>\r\n                        <button type=\"button\" className=\"close\" onClick={this.handleCloseAlert}>\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n                    </div>                                \r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport InventarioForm from './inventario-form.component';\r\nimport { Spinner } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus, faEdit, faTrash } from '@fortawesome/free-solid-svg-icons';\r\nconst { convertMiles } = require('../../utils/utils.js')\r\n\r\nexport default class InventarioList extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            datos: [],\r\n            loading: true,\r\n            idUpdate: '',\r\n            didUpdate: true\r\n        }\r\n        this.datalist = this.datalist.bind(this);\r\n    }\r\n\r\n    updateList = async () => {\r\n        \r\n        await axios.get(process.env.REACT_APP_SERVER_URL + \"/inventarios/\")\r\n            .then(response => {\r\n                console.log(response.data)\r\n                this.setState({\r\n                    datos: response.data,\r\n                    loading: false\r\n                })  \r\n            })\r\n            .catch(err => console.log(err))\r\n        //Pagina la lista\r\n        //window.paginar('list-group','list-group-item',true);\r\n    }\r\n\r\n    componentDidMount(){this.updateList()}\r\n    componentDidUpdate(){}\r\n\r\n    deleteData = async (jsondatos) => {\r\n\r\n        console.log('delete',jsondatos._id)\r\n        await axios.delete(process.env.REACT_APP_SERVER_URL + \"/inventarios/\"+jsondatos._id)\r\n            .then(res => {\r\n                console.log('res', res.data)\r\n                if(res.data.delete === \"relacionado\"){\r\n                    alert(\"No se puede eliminar, existen compras relacionadas a este inventario\")\r\n                }else{\r\n                    this.setState({\r\n                        datos: this.state.datos.filter(el => el._id !== jsondatos._id)\r\n                    });\r\n                }\r\n            })\r\n            .catch(err => console.log(err))        \r\n    }\r\n\r\n    updateData = (jsondatos) => {this.setState({idUpdate: jsondatos._id})}\r\n    createData = (id) => {this.setState({idUpdate: id})}\r\n\r\n    datalist(){\r\n        return this.state.datos.map(dato => {\r\n            return (\r\n                <li className=\"list-group-item\" key={dato._id}>\r\n                    <div className=\"col-md-4\">{dato.codigo}<br/>\r\n                        <span className=\"details-user-actions\">\r\n                            <b> Creado por: </b>{dato.user_created}\r\n                            <b> Actualidado por: </b>{dato.user_updated}\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"col-md-3\">{dato.descripcion}</div>\r\n                    <div className=\"col-md-3 details-consumision\">\r\n                        <b>Cantidad:</b> <span>{convertMiles(dato.cantidad)}</span><br/>\r\n                        <b>Costo:</b> <span>{convertMiles(dato.precio_costo)} Gs.</span><br />\r\n                        <b>Venta:</b> <span>{convertMiles(dato.precio_venta)} Gs.</span>\r\n                    </div>\r\n                    <div className=\"col-md-2 text-right\">\r\n                        <button onClick={() => this.updateData(dato)} type=\"button\" className=\"btn btn-light btn-sm mr-1\"><FontAwesomeIcon icon={faEdit} /></button>\r\n                        <button onClick={() => this.deleteData(dato)} type=\"button\" className=\"btn btn-danger btn-sm\"><FontAwesomeIcon icon={faTrash} /></button>\r\n                    </div>\r\n                </li>)\r\n        })\r\n    }\r\n    render(){       \r\n        return(\r\n            <div className=\"content-wrapper\" id=\"content\">\r\n                <h2>Inventarios</h2>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-header\">\r\n                                <div className=\"card-title row mb-0\">  \r\n                                    <div className=\"col-md-3\">Codigo</div>\r\n                                    <div className=\"col-md-7\">Descripcion</div>\r\n                                    <div className=\"col-md-2 text-right\">\r\n                                        <button onClick={() => this.createData(\"NEW\")} type=\"button\" className=\"btn btn-warning btn-sm\"><FontAwesomeIcon icon={faPlus} /> Nuevo</button>\r\n                                    </div>                                 \r\n                                </div>\r\n                            </div>\r\n                            <input className=\"form-control inputsearch\" type=\"search\" placeholder=\"Busqueda (minimo 3 letras)...\" />\r\n                            <ul id=\"list\" className=\"list-group\">\r\n                                {this.state.loading  ? \r\n                                    <Spinner animation=\"border\" variant=\"primary\" style={{margin:\"25px\",alignSelf:\"center\"}}/> \r\n                                :\r\n                                    this.state.datos.length === 0 ?\r\n                                        <div className=\"col-md-12 text-center m-3\">Sin registros encontrados</div>\r\n                                    :\r\n                                        this.datalist()\r\n                                }\r\n                            </ul>                     \r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <InventarioForm idUpdate={this.state.idUpdate} onUpdateParentList={this.updateList}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport Select from 'react-select';\r\nimport DatePicker from 'react-datepicker';\r\nimport MaskedInput from 'react-maskedinput';\r\nimport UserContext  from '../../UserContext';\r\nimport { NumericFormat } from 'react-number-format';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\r\nconst { convertMiles } = require('../../utils/utils.js')\r\n\r\nexport default class ComprasForm extends Component{\r\n    static contextType = UserContext;\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {  \r\n            numerofactura: '',\r\n            fechaCompra: new Date(),\r\n            inventarioSelected: {},\r\n            inventarioOptions: [],\r\n            proveedorSelected: {},\r\n            proveedorOptions: [],\r\n            cantidad: '',\r\n            costo: '',\r\n            total: '',\r\n            user_created: '',\r\n            user_updated: '',\r\n            textButton:'Crear',\r\n            titleForm: 'Crear Compra',\r\n            idUpdate: 'NEW'\r\n        };        \r\n    }\r\n    //Metodo que obtiene cualquier actualizacion de otros componentes donde fue llamado\r\n    componentDidUpdate(){        \r\n        if(this.state.idUpdate !== this.props.idUpdate ){\r\n            this.setState({ idUpdate: this.props.idUpdate});\r\n            if(this.props.idUpdate !== \"NEW\" && this.props.idUpdate !== \"\" ){\r\n                axios.get(process.env.REACT_APP_SERVER_URL  + \"/compras/\"+this.props.idUpdate)\r\n                .then(response => {\r\n                    this.setState({\r\n                        numerofactura: response.data.numerofactura,\r\n                        inventarioSelected: this.state.inventarioOptions.filter(el => el.value === response.data.inventario)[0],\r\n                        proveedorSelected: this.state.proveedorOptions.filter(el => el.value === response.data.proveedor)[0],\r\n                        cantidad: convertMiles(response.data.cantidad),\r\n                        costo: convertMiles(response.data.costo),\r\n                        total: convertMiles(response.data.total),\r\n                        textButton:'Editar',\r\n                        titleForm: 'Editar Compra'\r\n                    })\r\n                })\r\n                .catch(err => console.log(err));\r\n            }else{\r\n                this.setState({\r\n                    numerofactura: '',\r\n                    inventario: this.state.inventarioOptions[0],\r\n                    proveedor: this.state.proveedorOptions[0],\r\n                    cantidad: '',\r\n                    costo: '',\r\n                    total: '',\r\n                    textButton:'Crear',\r\n                    titleForm: 'Crear Compra',\r\n                    idUpdate: this.props.idUpdate\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    //Metodo que se ejecuta antes del render\r\n    componentDidMount(){\r\n        const currentUser = this.context.currentUser;\r\n        this.setState({user_created: currentUser.name, user_updated: currentUser.name}) \r\n\r\n        this.getInventariosOptions(); //Obtener Inventarios\r\n        this.getProveedoresOptions(); //Obtener Proveedores       \r\n    }    \r\n\r\n    getInventariosOptions = async () => {\r\n        await axios.get(process.env.REACT_APP_SERVER_URL  + \"/Inventarios\").then(response => {\r\n            let options = [];\r\n            if(response.data.length > 0 ){\r\n                response.data.forEach(element => {options.push({value:element._id,label:element.descripcion +\" | \"+element.codigo})});\r\n                this.setState({inventarioSelected: options[0], inventarioOptions: options});\r\n            }else{\r\n                this.setState({inventarioSelected: {}, inventarioOptions: []});\r\n            }\r\n        }).catch(err => console.log(err))        \r\n    }\r\n    getProveedoresOptions = async () => {\r\n        await axios.get(process.env.REACT_APP_SERVER_URL  + \"/Proveedores\").then(response => {\r\n            let options = [];\r\n            if(response.data.length > 0 ){\r\n                response.data.forEach(element => {options.push({value:element._id,label:element.razonsocial})});\r\n                this.setState({proveedorSelected: options[0], proveedorOptions: options});\r\n            }else{\r\n                this.setState({proveedorSelected: {}, proveedorOptions: []});\r\n            }\r\n        }).catch(err => console.log(err))        \r\n    }\r\n    onChangeFechaCompra = (date) => {this.setState({fechaCompra: date})}    \r\n    onChangeNumeroFactura = (e) => {this.setState({numerofactura: e.target.value})}\r\n    onChangeTotal = (e) => {this.setState({total: e.target.value})}\r\n    onChangeInventario = (selectedOption) => {this.setState({inventarioSelected: selectedOption})}\r\n    onChangeProveedor = (selectedOption) => {this.setState({proveedorSelected: selectedOption})}\r\n    onChangeCantidad = (e) => {this.setState({cantidad: e.target.value}, () => this.calcularTotal())}\r\n    onChangeCosto = (e) => {this.setState({costo: e.target.value}, () => this.calcularTotal())}\r\n    calcularTotal = () => {\r\n        let total = 0;\r\n        total = parseInt(this.state.cantidad.replace(/\\./gi,'')) * parseInt(this.state.costo.replace(/\\./gi,''));\r\n        this.setState({total})\r\n    }\r\n    showNotification(isSuccess){\r\n        document.querySelector('#alert').classList.replace('hide','show');\r\n        if(isSuccess === true){\r\n            document.querySelector('#alert').classList.replace('alert-warning','alert-success');\r\n            document.querySelector('#alert #text').innerHTML = '<strong>Exito!</strong> Los datos han sido actualizados.'\r\n        }else{\r\n            document.querySelector('#alert').classList.replace('alert-success','alert-warning');\r\n            document.querySelector('#alert #text').innerHTML = '<strong>Error!</strong> Contacte con el administrador.'\r\n        }\r\n        //Enfocar el input\r\n        this._input.focus(); \r\n        //actualizar Lista\r\n        this.props.onUpdateParentList('true');\r\n        setTimeout(function(){  document.querySelector('#alert').classList.replace('show','hide'); }, 3000);\r\n    }\r\n\r\n    handleCloseAlert = () =>{\r\n        document.querySelector('#alert').classList.replace('show','hide');\r\n    }\r\n    \r\n    onSubtmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        if(this.props.idUpdate === \"NEW\" || this.props.idUpdate === \"\" ){\r\n            const compras = {\r\n                numerofactura: this.state.numerofactura,\r\n                inventario: this.state.inventarioSelected.value,\r\n                proveedor: this.state.proveedorSelected.value,\r\n                fecha_compra: this.state.fechaCompra,\r\n                cantidad: this.state.cantidad,\r\n                costo: this.state.costo,\r\n                total: this.state.total,\r\n                user_created: this.state.user_created,\r\n                user_updated: this.state.user_updated\r\n            }\r\n            \r\n            axios.post(process.env.REACT_APP_SERVER_URL  + '/compras/add',compras)\r\n                .then(res => this.showNotification(true))\r\n                .catch(err => this.showNotification(false));\r\n                this.setState({\r\n                    numerofactura: '',\r\n                    inventarioSelected: this.state.inventarioOptions[0],\r\n                    proveedorSelected: this.state.proveedorOptions[0],\r\n                    cantidad: '',\r\n                    costo: '',\r\n                    total: '',\r\n                    textButton:'Crear',\r\n                    titleForm: 'Crear Compra',\r\n                    idUpdate:'NEW'\r\n                })   \r\n                                \r\n        }else{            \r\n            const compras = {\r\n                numerofactura: this.state.numerofactura,\r\n                inventario: this.state.inventarioSelected.value,\r\n                proveedor: this.state.proveedorSelected.value,\r\n                fecha_compra: this.state.fechaCompra,\r\n                cantidad: this.state.cantidad,\r\n                costo: (this.state.costo+\"\").replace(/\\./gi,''),\r\n                total: (this.state.total+\"\").replace(/\\./gi,''),\r\n                user_updated: this.state.user_updated\r\n            }\r\n\r\n            axios.post(process.env.REACT_APP_SERVER_URL  + '/compras/update/'+this.state.idUpdate,compras)\r\n                .then(res => this.showNotification(true))\r\n                .catch(err => this.showNotification(false));            \r\n        }        \r\n    }   \r\n    \r\n    render(){  \r\n        \r\n        return(\r\n            <div className=\"container\"> \r\n                <h3>{this.state.titleForm}</h3>\r\n                <form onSubmit={this.onSubtmit}>\r\n                        <div className=\"row\">\r\n                            <div className=\"form-group col-md-12\">\r\n                                <label>Factura: </label>\r\n                                <input type=\"text\" \r\n                                    autoFocus={true}\r\n                                    ref={c => (this._input = c)}\r\n                                    required\r\n                                    className=\"form-control\"\r\n                                    value={this.state.numerofactura}\r\n                                    onChange={this.onChangeNumeroFactura}\r\n                                />\r\n                            </div>      \r\n                            <div className=\"form-group col-md-12\">\r\n                                <label>Inventario: </label>\r\n                                <Select               \r\n                                    noOptionsMessage={() => <a href=\"/Inventario\">Cargar Inventario</a>}\r\n                                    value={this.state.inventarioSelected} \r\n                                    options={this.state.inventarioOptions} \r\n                                    onChange={this.onChangeInventario}  \r\n                                    required/>\r\n                            </div>                          \r\n                            <div className=\"form-group col-md-12\">\r\n                                <label>Proveedor: </label>\r\n                                <Select               \r\n                                    noOptionsMessage={() => <a href=\"/Proveedores\">Cargar Proveedor</a>}\r\n                                    value={this.state.proveedorSelected} \r\n                                    options={this.state.proveedorOptions} \r\n                                    onChange={this.onChangeProveedor}                                    \r\n                                    required/>\r\n                            </div>\r\n                            <div className=\"form-group col-md-12\">\r\n                                <label>Fecha Compra: </label>                                    \r\n                                <DatePicker     \r\n                                    className=\"form-control\" \r\n                                    locale=\"esp\"\r\n                                    required\r\n                                    dateFormat=\"dd/MM/yyyy\"\r\n                                    selected={this.state.fechaCompra}\r\n                                    onChange={this.onChangeFechaCompra}\r\n                                    showYearDropdown \r\n                                    customInput={\r\n                                        <MaskedInput mask=\"11/11/1111\" placeholder=\"mm/dd/yyyy\" />\r\n                                    }                                           \r\n                                /> \r\n                            </div>\r\n                            <div className=\"form-group col-md-4\">\r\n                                <label>Cantidad/KG: </label>\r\n                                <NumericFormat \r\n                                    thousandSeparator = \".\"\r\n                                    decimalSeparator = \",\"\r\n                                    className=\"form-control\"\r\n                                    value={this.state.cantidad}\r\n                                    onChange={this.onChangeCantidad}\r\n                                    required\r\n                                />\r\n                            </div>  \r\n                            <div className=\"form-group col-md-4\">\r\n                                <label>Costo: </label>\r\n                                <NumericFormat \r\n                                    thousandSeparator = \".\"\r\n                                    decimalSeparator = \",\"\r\n                                    className=\"form-control\"\r\n                                    value={this.state.costo}\r\n                                    onChange={this.onChangeCosto}\r\n                                    required\r\n                                />\r\n                            </div> \r\n                            <div className=\"form-group col-md-4\">\r\n                                <label>Total: </label>\r\n                                <NumericFormat \r\n                                    disabled\r\n                                    thousandSeparator = \".\"\r\n                                    decimalSeparator = \",\"\r\n                                    className=\"form-control\"\r\n                                    value={this.state.total}\r\n                                    onChange={this.onChangeTotal}\r\n                                    required\r\n                                />\r\n                            </div> \r\n                        </div>\r\n                    <div className=\"form-group\">\r\n                        <button type=\"submit\" className=\"btn btn-warning\"><FontAwesomeIcon icon={faArrowLeft}/> {this.state.textButton}</button>\r\n                    </div>        \r\n                    <div id=\"alert\" className=\"alert alert-success alert-dismissible fade hide\" role=\"alert\">\r\n                        <span id=\"text\"></span>\r\n                        <button type=\"button\" className=\"close\" onClick={this.handleCloseAlert}>\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n                    </div>                                \r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport ComprasForm from './compras-form.component';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport moment from 'moment';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus, faEdit, faTrash } from '@fortawesome/free-solid-svg-icons';\r\nconst { convertMiles } = require('../../utils/utils.js')\r\n\r\nexport default class ComprasList extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            datos: [],\r\n            loading: true,\r\n            idUpdate: '',\r\n            didUpdate: true\r\n        }\r\n        this.datalist = this.datalist.bind(this);\r\n    }\r\n\r\n    updateList = async () => {\r\n        await axios.get(process.env.REACT_APP_SERVER_URL + \"/compras/\")\r\n            .then(response => {\r\n                this.setState({\r\n                    datos: response.data,\r\n                    loading: false\r\n                })  \r\n            })\r\n            .catch(err => console.log(err))\r\n        //Pagina la lista\r\n        window.paginar('list-group','list-group-item',true);\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.updateList();\r\n    }\r\n    deleteData = async (jsondatos) => {\r\n        await axios.delete(process.env.REACT_APP_SERVER_URL + \"/compras/\"+jsondatos._id)\r\n            .then(res => console.log(res.data))\r\n            .catch(err => console.log(err))\r\n\r\n        this.setState({\r\n            datos: this.state.datos.filter(el => el._id !== jsondatos._id)\r\n        });\r\n    }\r\n\r\n    updateData = (jsondatos) => {this.setState({idUpdate: jsondatos._id})}\r\n    createData = (id) => {this.setState({idUpdate: id})}\r\n\r\n    datalist(){\r\n        return this.state.datos.map(dato => {\r\n            return (\r\n                <li className=\"list-group-item\" key={dato._id}>\r\n                    <div className=\"col-md-2\">{dato.numerofactura}</div>\r\n                    <div className=\"col-md-4\">{dato.inventario ? dato.inventario.descripcion : 'Inventario Eliminado'}\r\n                        <br />\r\n                        <div style={{color:'#918C8C',fontSize:'12px'}}>\r\n                            <b>Comprado el: </b>{ moment(dato.fecha_compra).format(\"DD-MM-YYYY\")}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-2\">\r\n                        {dato.proveedor.razonsocial}\r\n                        \r\n                    </div>\r\n                    <div className=\"col-md-3 details-consumision \"> \r\n                        Cantidad: <span>{convertMiles(dato.cantidad)}</span><br/>\r\n                        Costo: <span>Gs. {convertMiles(dato.costo)}</span><br/>\r\n                        Total: <span>Gs. {convertMiles(dato.total)}</span><br/>\r\n                    </div>\r\n                    <div className=\"col-md-1 text-right\">\r\n                        <button onClick={() => this.updateData(dato)} type=\"button\" className=\"btn btn-light btn-sm mr-1\"><FontAwesomeIcon icon={faEdit} /></button>\r\n                        <button onClick={() => this.deleteData(dato)} type=\"button\" className=\"btn btn-danger btn-sm\"><FontAwesomeIcon icon={faTrash} /></button>\r\n                    </div>\r\n                </li>)\r\n        })\r\n    }\r\n    render(){       \r\n        return(\r\n            <div className=\"content-wrapper\" id=\"content\">\r\n                <h2>Compras</h2>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-header\">\r\n                                <div className=\"card-title row mb-0\">  \r\n                                    <div className=\"col-md-2\">Factura</div>\r\n                                    <div className=\"col-md-4\">Inventario</div>\r\n                                    <div className=\"col-md-2\">Proveedor</div>\r\n                                    <div className=\"col-md-2\">Montos</div>\r\n                                    <div className=\"col-md-2 text-right\">\r\n                                        <button onClick={() => this.createData(\"NEW\")} type=\"button\" className=\"btn btn-warning btn-sm\"><FontAwesomeIcon icon={faPlus} /> Nuevo</button>\r\n                                    </div>                                 \r\n                                </div>\r\n                            </div>\r\n                            <input className=\"form-control inputsearch\" type=\"search\" placeholder=\"Busqueda (minimo 3 letras)...\" />\r\n                            <ul id=\"list\" className=\"list-group\">\r\n                                {this.state.loading  ? \r\n                                    <Spinner animation=\"border\" variant=\"primary\" style={{margin:\"25px\",alignSelf:\"center\"}}/> \r\n                                :\r\n                                    this.state.datos.length === 0 ?\r\n                                        <div className=\"col-md-12 text-center m-3\">Sin registros encontrados</div>\r\n                                    :\r\n                                        this.datalist()\r\n                                }\r\n                            </ul>                     \r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        \r\n                            <ComprasForm idUpdate={this.state.idUpdate} onUpdateParentList={this.updateList}/>\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport UserContext  from '../../UserContext';\r\n\r\nimport { NumericFormat } from 'react-number-format';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\r\nimport { getDiv } from '../../utils/utils.js';\r\n\r\nexport default class ProveedorForm extends Component{\r\n    static contextType = UserContext;\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {  \r\n            ruc:'',\r\n            div:'',\r\n            razonsocial:'',\r\n            user_created: '',\r\n            user_updated: '',\r\n            textButton:'Crear',\r\n            titleForm: 'Crear Proveedor',\r\n            idUpdate: 'NEW'\r\n        };        \r\n    }\r\n    //Metodo que obtiene cualquier actualizacion de otros componentes donde fue llamado\r\n    componentDidUpdate(){        \r\n        if(this.state.idUpdate !== this.props.idUpdate ){\r\n            this.setState({ idUpdate: this.props.idUpdate});\r\n            if(this.props.idUpdate !== \"NEW\" && this.props.idUpdate !== \"\" ){\r\n                axios.get(process.env.REACT_APP_SERVER_URL + \"/proveedores/\"+this.props.idUpdate)\r\n                .then(response => {\r\n                    this.setState({\r\n                        ruc: response.data.ruc,\r\n                        razonsocial: response.data.razonsocial,\r\n                        div: response.data.div,\r\n                        textButton:'Editar',\r\n                        titleForm: 'Editar Proveedor'\r\n                    })\r\n                })\r\n                .catch(err => console.log(err));\r\n            }else{\r\n                this.setState({\r\n                    ruc:'',\r\n                    div:'',\r\n                    razonsocial:'',\r\n                    textButton:'Crear',\r\n                    titleForm: 'Crear Proveedor',\r\n                    idUpdate: this.props.idUpdate\r\n                });\r\n            }\r\n        }\r\n    }\r\n     //Metodo que se ejecuta antes del render\r\n     componentDidMount(){\r\n        const currentUser = this.context.currentUser;\r\n        this.setState({user_created: currentUser.name, user_updated: currentUser.name}) \r\n        \r\n        //Enfocar el input\r\n        this._input.focus(); \r\n    }\r\n\r\n\r\n    onChangeRazonSocial = (e) => {this.setState({razonsocial: e.target.value})}\r\n    onChangeRuc = (e) => {\r\n        this.setState({\r\n            ruc: e.target.value,\r\n            div: getDiv(e.target.value)\r\n        })\r\n    }  \r\n    \r\n    showNotification(isSuccess){\r\n        document.querySelector('#alert').classList.replace('hide','show');\r\n        if(isSuccess === true){\r\n            document.querySelector('#alert').classList.replace('alert-warning','alert-success');\r\n            document.querySelector('#alert #text').innerHTML = '<strong>Exito!</strong> Los datos han sido actualizados.'\r\n        }else{\r\n            document.querySelector('#alert').classList.replace('alert-success','alert-warning');\r\n            document.querySelector('#alert #text').innerHTML = '<strong>Error!</strong> Contacte con el administrador.'\r\n        }\r\n        //Enfocar el input\r\n        this._input.focus(); \r\n        //actualizar Lista\r\n        this.props.onUpdateParentList('true');\r\n        setTimeout(function(){  document.querySelector('#alert').classList.replace('show','hide'); }, 3000);\r\n    }\r\n\r\n    handleCloseAlert = () =>{\r\n        document.querySelector('#alert').classList.replace('show','hide');\r\n    }\r\n    \r\n    onSubtmit = (e) => {\r\n        e.preventDefault();\r\n        if(this.props.idUpdate === \"NEW\" || this.props.idUpdate === \"\" ){\r\n            const proveedor = {\r\n                ruc: this.state.ruc,\r\n                div: this.state.div,\r\n                razonsocial: this.state.razonsocial,\r\n                user_created: this.state.user_created,\r\n                user_updated: this.state.user_updated\r\n            }\r\n            axios.post(process.env.REACT_APP_SERVER_URL + '/proveedores/add',proveedor)\r\n                .then(res => this.showNotification(true))\r\n                .catch(err => this.showNotification(false));\r\n            this.setState({\r\n                ruc:'',\r\n                div:'',\r\n                razonsocial:'',\r\n                textButton:'Crear',\r\n                titleForm: 'Crear Proveedor',\r\n                idUpdate:'NEW'\r\n            }) \r\n        }else{\r\n            const proveedor = {\r\n                ruc: this.state.ruc,\r\n                razonsocial: this.state.razonsocial,\r\n                div: this.state.div,\r\n                user_updated: this.state.user_updated\r\n            }\r\n            axios.post(process.env.REACT_APP_SERVER_URL + '/proveedores/update/'+this.state.idUpdate,proveedor)\r\n                .then(res => this.showNotification(true))\r\n                .catch(err => this.showNotification(false));\r\n        }\r\n\r\n       \r\n    }   \r\n    \r\n    render(){  \r\n        \r\n        return(\r\n            <div className=\"container\"> \r\n                <h3>{this.state.titleForm}</h3>\r\n                <form onSubmit={this.onSubtmit}>\r\n                        <div className=\"row\">\r\n                            <div className=\"form-group col-md-6\">\r\n                                <label>Ruc: </label>\r\n                                <NumericFormat \r\n                                    thousandSeparator = \"\"\r\n                                    decimalSeparator = \"_\"\r\n                                    autoFocus={true}       \r\n                                    getInputRef={c => (this._input = c)}                                 \r\n                                    required\r\n                                    className=\"form-control\"\r\n                                    value={this.state.ruc}\r\n                                    onChange={this.onChangeRuc}\r\n                                />\r\n                            </div>      \r\n                            <div className=\"form-group col-md-6\">\r\n                                <label>DIV: </label>\r\n                                <input type=\"number\" \r\n                                    disabled\r\n                                    id=\"idDiv\"\r\n                                    className=\"form-control\"\r\n                                    value={this.state.div}                                    \r\n                                />\r\n                            </div>                          \r\n                            <div className=\"form-group col-md-12\">\r\n                                <label>Razon Social: </label>\r\n                                <input type=\"text\" \r\n                                    required                                    \r\n                                    className=\"form-control\"\r\n                                    value={this.state.razonsocial}\r\n                                    onChange={this.onChangeRazonSocial}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    <div className=\"form-group\">\r\n                        <button type=\"submit\" className=\"btn btn-warning\"><FontAwesomeIcon icon={faArrowLeft}/> {this.state.textButton}</button>\r\n                    </div>        \r\n                    <div id=\"alert\" className=\"alert alert-success alert-dismissible fade hide\" role=\"alert\">\r\n                        <span id=\"text\"></span>\r\n                        <button type=\"button\" className=\"close\" onClick={this.handleCloseAlert}>\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n                    </div>                                \r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport ProveedorForm from './proveedor-form.component';\r\nimport { Spinner } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus, faEdit, faTrash } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport default class ProveedorList extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            datos: [],\r\n            loading: true,\r\n            idUpdate: '',\r\n            didUpdate: true\r\n        }\r\n        this.datalist = this.datalist.bind(this);\r\n    }\r\n\r\n    updateList = async () => {\r\n        await axios.get(process.env.REACT_APP_SERVER_URL + \"/proveedores/\")\r\n            .then(response => {\r\n                this.setState({\r\n                    datos: response.data,\r\n                    loading: false\r\n                })  \r\n            })\r\n            .catch(err => console.log(err))\r\n\r\n        //Pagina la lista\r\n        window.paginar('list-group','list-group-item',true);\r\n    }\r\n\r\n    componentDidMount(){      \r\n        this.updateList();\r\n    }\r\n    componentDidUpdate(){}\r\n\r\n    deleteData = async (jsondatos) => {\r\n        await axios.delete(process.env.REACT_APP_SERVER_URL + \"/proveedores/\"+jsondatos._id)\r\n            .then(res => console.log(res.data))\r\n            .catch(err => console.log(err))\r\n\r\n        this.setState({\r\n            datos: this.state.datos.filter(el => el._id !== jsondatos._id)\r\n        });\r\n    }\r\n\r\n    updateData = (jsondatos) => {this.setState({idUpdate: jsondatos._id})}\r\n    createData = (id) => {this.setState({idUpdate: id})}\r\n\r\n    datalist(){\r\n        return this.state.datos.map(dato => {\r\n            return (\r\n                <li className=\"list-group-item\" key={dato._id}>\r\n                    <div className=\"col-md-4\">{dato.ruc + \"-\" + dato.div}</div>\r\n                    <div className=\"col-md-6\">{dato.razonsocial}</div>\r\n                    <div className=\"col-md-2 text-right\">\r\n                        <button onClick={() => this.updateData(dato)} type=\"button\" className=\"btn btn-light btn-sm mr-1\"><FontAwesomeIcon icon={faEdit} /></button>\r\n                        <button onClick={() => this.deleteData(dato)} type=\"button\" className=\"btn btn-danger btn-sm\"><FontAwesomeIcon icon={faTrash} /></button>\r\n                    </div>\r\n                </li>)\r\n        })\r\n    }\r\n    render(){       \r\n        return(\r\n            <div className=\"content-wrapper\" id=\"content\">\r\n                <h2>Proveedores</h2>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-header\">\r\n                                <div className=\"card-title row mb-0\">  \r\n                                    <div className=\"col-md-4\">Ruc</div>\r\n                                    <div className=\"col-md-6\">Razon Social</div>\r\n                                    <div className=\"col-md-2 text-right\">\r\n                                        <button onClick={() => this.createData(\"NEW\")} type=\"button\" className=\"btn btn-warning btn-sm\"><FontAwesomeIcon icon={faPlus} /> Nuevo</button>\r\n                                    </div>                                 \r\n                                </div>\r\n                            </div>\r\n                            <input className=\"form-control inputsearch\" type=\"search\" placeholder=\"Busqueda (minimo 3 letras)...\" />\r\n                            <ul id=\"list\" className=\"list-group\">\r\n                                {this.state.loading  ? \r\n                                    <Spinner animation=\"border\" variant=\"primary\" style={{margin:\"25px\",alignSelf:\"center\"}}/> \r\n                                :\r\n                                    this.state.datos.length === 0 ?\r\n                                        <div className=\"col-md-12 text-center m-3\">Sin registros encontrados</div>\r\n                                    :\r\n                                        this.datalist()\r\n                                }\r\n                            </ul>                     \r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <ProveedorForm idUpdate={this.state.idUpdate} onUpdateParentList={this.updateList}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport UserContext  from '../../UserContext';\r\nimport Select from 'react-select';\r\nimport { NumericFormat } from 'react-number-format';\r\nimport { getDiv } from '../../utils/utils.js'\r\n\r\nexport default class CajaDetallesForm extends Component{\r\n    static contextType = UserContext;\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {  \r\n            ruc:'',\r\n            div:'',\r\n            razonsocial:'',\r\n            timbrado: {},\r\n            inventarioSelected: {},\r\n            inventarioOptions: [],\r\n            clienteSelected: {},\r\n            clienteOptions: [],            \r\n            caja:{},\r\n            cliente: {},\r\n            codigoBarra:'',\r\n            cantidad:'',\r\n            precio:'',\r\n            total:'',\r\n            producto:'',\r\n            pagamiento_recibido:'',\r\n            pagamiento_total:'',\r\n            pagamiento_vuelto:'',\r\n            user_created: '',\r\n            user_updated: '',\r\n            textButton:'Agregar',\r\n            titleForm: 'Agregar Detalle',\r\n            idUpdate: 'NEW'\r\n        };        \r\n    }\r\n    \r\n    //Metodo que se ejecuta antes del render\r\n    componentDidMount(){\r\n        const currentUser = this.context.currentUser;\r\n        this.setState({user_created: currentUser.name, user_updated: currentUser.name}) \r\n   \r\n        this.getTimbrado();//Obtiene los datos para la factura\r\n        this.getInventariosOptions(); //Obtener Inventarios\r\n        this.getClientesOptions(); //Obtiene los Clientes\r\n\r\n        setInterval(() => {            \r\n            if (document.activeElement !== this._input){\r\n                this._input.focus();\r\n            };\r\n            if (document.activeElement !== this._inputRecibido){\r\n                this._inputRecibido.focus();\r\n            };\r\n\r\n        }, \"1000\");\r\n    }    \r\n    getTimbrado = () =>{\r\n        axios.get(process.env.REACT_APP_SERVER_URL + \"/timbrados/activado/0\")\r\n        .then(response => {\r\n            this.setState({\r\n                timbrado: response.data,\r\n            })\r\n        })\r\n    }\r\n\r\n    getClientesOptions = () => {\r\n        axios.get(process.env.REACT_APP_SERVER_URL + \"/clientes\")\r\n        .then(response => {\r\n            let options = [];\r\n            let optiondefault = {};\r\n            response.data.forEach(element => {\r\n                if(element.ruc === '000000'){\r\n                     optiondefault = {value:element,label:element.ruc+\"-\"+element.div +\" \"+element.razonsocial +\" | CI:\"+element.ruc.replace(/\\./gi,'')};\r\n                }\r\n                options.push({value:element,label:element.ruc+\"-\"+element.div +\" \"+element.razonsocial +\" | CI:\"+element.ruc.replace(/\\./gi,'')});\r\n            });\r\n            this.setState({\r\n                clienteOptions: options,     \r\n                clienteSelected: optiondefault,\r\n                ruc: optiondefault.value.ruc,\r\n                div: optiondefault.value.div,\r\n                razonsocial: optiondefault.value.razonsocial          \r\n            });\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n    getInventariosOptions = async () => {\r\n        await axios.get(process.env.REACT_APP_SERVER_URL  + \"/Inventarios\").then(response => {\r\n            let options = [];\r\n            options.push({value:'undefined',label:'', codigo: '', precio: 0})\r\n            if(response.data.length > 0 ){\r\n                response.data.forEach(element => {\r\n                    options.push({value:element._id,label:element.descripcion, codigo: element.codigo, precio: element.precio_venta})\r\n                });\r\n                this.setState({inventarioSelected: options[0], inventarioOptions: options});\r\n            }else{\r\n                this.setState({inventarioSelected: {}, inventarioOptions: []});\r\n            }\r\n        }).catch(err => console.log(err)) \r\n         \r\n        \r\n    }\r\n    onKeyPressBuscarCliente = (e) =>{       \r\n        if (e.key === \"-\") {\r\n            document.querySelector('#PanelVueltos').classList.remove(\"d-none\");\r\n            document.querySelector('#PanelCliente').classList.add(\"d-none\");\r\n            this._inputRecibido.focus();//Enfoca en el input del vuelto\r\n            e.preventDefault();//Para que no cargue el key\r\n        }\r\n        if (e.key === \"+\") {\r\n            e.preventDefault();//Para que no cargue el key\r\n            //Generar la factura e imprimir\r\n\r\n            //this.submitFactura()\r\n            this.onSubtmitCliente(e);\r\n        }\r\n    }\r\n    onKeyPressRecibido = (e) =>{   \r\n        if (e.key === \"-\") {\r\n            document.querySelector('#PanelProductos').classList.remove(\"d-none\");\r\n            document.querySelector('#PanelVueltos').classList.add(\"d-none\");\r\n            this._input.focus();//Enfoca en el input del vuelto\r\n            e.preventDefault();//Para que no cargue el key\r\n        }\r\n        if (e.key === \"+\" || e.key === \"Enter\") {\r\n            e.preventDefault();    \r\n            //Actualiza el ultimo vuelto\r\n            this.props.onUpdateParentUltimoVuelto(this.state.pagamiento_vuelto);\r\n                \r\n            document.querySelector('#PanelVueltos').classList.add(\"d-none\");\r\n            document.querySelector('#PanelCliente').classList.remove(\"d-none\");            \r\n            this._inputBuscarCliente.focus();//Enfoca en el input del ruc cliente\r\n            e.preventDefault();//Para que no cargue el key\r\n        }\r\n    }\r\n    onKeyPressCodigoBarra = (e) =>{       \r\n        if (e.key === \"+\") {\r\n            e.preventDefault();//Para que no cargue el key\r\n            if(document.querySelector('#totales_total') !== null){\r\n                document.querySelector('#PanelProductos').classList.add(\"d-none\");\r\n                document.querySelector('#PanelVueltos').classList.remove(\"d-none\");\r\n                this._inputRecibido.focus();//Enfoca en el input del vuelto\r\n                \r\n                this.setState({\r\n                    pagamiento_total: document.querySelector('#totales_total').innerText.replace(/\\./gi,'')\r\n                })\r\n            }\r\n        }\r\n        if (e.key === \"-\")  e.preventDefault();//Para que no cargue el key\r\n    }\r\n    onChangeCodigoBarra = (e) => {\r\n        this.setState({codigoBarra: e.target.value})\r\n        let codigobarra = e.target.value;\r\n\r\n        if (codigobarra.length === 13){\r\n            let cod_inv =  parseInt(codigobarra.substring(2,7));\r\n            let indexInventario = undefined;\r\n            this.state.inventarioOptions.forEach((element, index) => {\r\n                let codigo = parseInt(element.codigo);\r\n                if( codigo === cod_inv){\r\n                    indexInventario = index;\r\n                    return false;\r\n                }\r\n            })\r\n            //Si encuentra el producto en el inventario\r\n            if(indexInventario){\r\n                let cantidad =  parseInt(codigobarra.substring(7,12)) / 1000;\r\n                let inventario = this.state.inventarioOptions[indexInventario];\r\n                let precio = inventario.precio;\r\n                let total = parseInt(inventario.precio * cantidad);\r\n                \r\n                this.setState({\r\n                    inventarioSelected: inventario,\r\n                    producto: inventario.label,\r\n                    cantidad,\r\n                    precio,\r\n                    total\r\n                })\r\n            }\r\n        }else{\r\n            this.setState({\r\n                inventarioSelected: this.state.inventarioOptions[0],\r\n                producto: this.state.inventarioOptions[0].label,\r\n                cantidad: '',\r\n                precio: '',\r\n                total: ''\r\n            })\r\n        }\r\n    }\r\n    onChangeCantidad = (e) => {this.setState({cantidad: e.target.value})}\r\n    onChangePrecio = (e) => {this.setState({precio: e.target.value})}\r\n    onChangeTotal = (e) => {this.setState({total: e.target.value})}\r\n    onChangeProducto = (e) => {this.setState({producto: e.target.value})}\r\n    onChangeRecibido = (e) => {\r\n        let recibido = parseInt(e.target.value.replace(/\\./gi,''));\r\n        let total = this.state.pagamiento_total;\r\n        let vuelto = recibido - total;\r\n\r\n        this.setState({\r\n            pagamiento_recibido: e.target.value,\r\n            pagamiento_vuelto: vuelto\r\n        }\r\n    )}\r\n    onChangeRazonSocial = (e) => {this.setState({razonsocial: e.target.value})}\r\n    onChangeRuc = (e) => {\r\n        this.setState({\r\n            ruc: e.target.value,\r\n            div: getDiv(e.target.value)\r\n        })\r\n    }  \r\n    onChangeCliente = (selectedOption) => {\r\n        this.setState({\r\n            clienteSelected: selectedOption,\r\n            ruc: selectedOption.value.ruc,\r\n            div: selectedOption.value.div,\r\n            razonsocial: selectedOption.value.razonsocial\r\n        })\r\n    }\r\n\r\n    showNotification(isSuccess){   \r\n        /* \r\n        document.querySelector('#alert').classList.replace('hide','show');\r\n        if(isSuccess === true){\r\n            document.querySelector('#alert').classList.replace('alert-warning','alert-success');\r\n            document.querySelector('#alert #text').innerHTML = '<strong>Exito!</strong> Los datos han sido actualizados.'\r\n        }else{\r\n            document.querySelector('#alert').classList.replace('alert-success','alert-warning');\r\n            document.querySelector('#alert #text').innerHTML = '<strong>Error!</strong> Contacte con el administrador.'\r\n        }\r\n        */\r\n        //Enfocar el input\r\n        this._input.focus(); \r\n        //actualizar Lista\r\n        this.props.onUpdateParentList('true');\r\n        //setTimeout(function(){  document.querySelector('#alert').classList.replace('show','hide'); }, 3000);\r\n    }\r\n\r\n    onSubtmit = (e) => {\r\n        e.preventDefault();        \r\n        const detalleCaja = {\r\n            caja: this.props.caja._id,\r\n            inventario: this.state.inventarioSelected.value,\r\n            cantidad: this.state.cantidad,\r\n            precio: this.state.precio,\r\n            total: this.state.total,\r\n            estado: 'Agregado',\r\n            user_created: this.state.user_created,\r\n            user_updated: this.state.user_updated\r\n        }\r\n\r\n        axios.post(process.env.REACT_APP_SERVER_URL + '/cajas-detalles/add',detalleCaja)\r\n            .then(res => this.showNotification(true))\r\n            .catch(err => this.showNotification(false));\r\n\r\n            this.setState({\r\n                codigoBarra:'',\r\n                inventarioSelected: this.state.inventarioOptions[0],\r\n                producto: '',\r\n                cantidad: '',\r\n                precio: '',\r\n                total: ''\r\n            })             \r\n    }   \r\n\r\n    onSubtmitCliente = (e) => {\r\n        e.preventDefault();\r\n        let factura = {            \r\n            caja: this.props.caja,\r\n            cliente: this.state.clienteSelected.value,\r\n            timbrado: this.state.timbrado,\r\n            recibido: this.state.pagamiento_recibido,\r\n            total: this.state.pagamiento_total,\r\n            vuelto: this.state.pagamiento_vuelto,\r\n            user_created: this.state.user_created,\r\n            user_updated: this.state.user_updated\r\n        }\r\n\r\n        const clientes = {\r\n            ruc: this.state.ruc,\r\n            div: this.state.div,\r\n            razonsocial: this.state.razonsocial,\r\n            user_created: this.state.user_created,\r\n            user_updated: this.state.user_updated\r\n        }\r\n\r\n        axios.post(process.env.REACT_APP_SERVER_URL + '/clientes/comprobar',clientes)\r\n            .then(res => {\r\n                factura.cliente = res.data;\r\n                this.submitFactura(factura)\r\n            })\r\n            .catch(err => console.log(err));\r\n        \r\n    }   \r\n\r\n    submitFactura = (factura) =>{\r\n        this.props.onParentPrintFactura(factura);\r\n\r\n        document.querySelector('#PanelProductos').classList.remove(\"d-none\");\r\n        document.querySelector('#PanelVueltos').classList.add(\"d-none\");\r\n        document.querySelector('#PanelCliente').classList.add(\"d-none\");\r\n        this._input.focus();//Enfoca en el input del vuelto  \r\n    }\r\n    \r\n    render(){\r\n        return(\r\n        <div>\r\n            <div id=\"PanelProductos\" className=\"container\"> \r\n                <h3>{this.state.titleForm}</h3>\r\n                <form onSubmit={this.onSubtmit}>\r\n                        <div className=\"row\">\r\n                            <div className=\"form-group col-md-12\">\r\n                                <label>Codigo Barra: </label>\r\n                                <input id=\"codigobarra\" type=\"text\" \r\n                                    autoFocus={true}\r\n                                    ref={c => (this._input = c)}\r\n                                    required\r\n                                    maxLength={13} \r\n                                    className=\"form-control\"\r\n                                    value={this.state.codigoBarra}\r\n                                    onChange={this.onChangeCodigoBarra} \r\n                                    onKeyPress={this.onKeyPressCodigoBarra}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group col-md-12\">\r\n                                <label>Producto: </label>\r\n                                <input type=\"text\" \r\n                                    disabled \r\n                                    className=\"form-control\"\r\n                                    value={this.state.producto}\r\n                                    onChange={this.onChangeProducto} \r\n                                />\r\n                            </div> \r\n                            <div className=\"form-group col-md-3\">\r\n                                <label>Cantidad: </label>\r\n                                <NumericFormat                                     \r\n                                    thousandSeparator = \".\"\r\n                                    decimalSeparator = \",\"\r\n                                    className=\"form-control\"\r\n                                    value={this.state.cantidad}\r\n                                    onChange={this.onChangeCantidad}\r\n                                    disabled\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group col-md-4\">\r\n                                <label>Precio: </label>\r\n                                <NumericFormat\r\n                                    thousandSeparator = \".\"\r\n                                    decimalSeparator = \",\"\r\n                                    className=\"form-control\"\r\n                                    value={this.state.precio}\r\n                                    onChange={this.onChangePrecio}\r\n                                    disabled\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group col-md-5\">\r\n                                <label>Total: </label>\r\n                                <NumericFormat \r\n                                    thousandSeparator = \".\"\r\n                                    decimalSeparator = \",\"\r\n                                    className=\"form-control\"\r\n                                    value={this.state.total}\r\n                                    onChange={this.onChangeTotal}\r\n                                    disabled\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    <div className=\"form-group d-none\">\r\n                        <button type=\"submit\" className=\"btn btn-warning d-none\"></button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n\r\n            <div id=\"PanelVueltos\" className=\"container d-none\"> \r\n                <h3>Vueltos</h3>\r\n                <form >\r\n                    <div className=\"row\">\r\n                        <div className=\"form-group col-md-12\">\r\n                            <label>Recibido: </label>\r\n                            <NumericFormat     \r\n                                autoFocus={true}                                \r\n                                getInputRef={c => (this._inputRecibido = c)}                                \r\n                                thousandSeparator = \".\"\r\n                                decimalSeparator = \",\"\r\n                                className=\"form-control\"\r\n                                value={this.state.pagamiento_recibido}\r\n                                onChange={this.onChangeRecibido}\r\n                                onKeyPress={this.onKeyPressRecibido}\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group col-md-6\">\r\n                            <label>Total: </label>\r\n                            <NumericFormat                                     \r\n                                thousandSeparator = \".\"\r\n                                decimalSeparator = \",\"\r\n                                className=\"form-control\"\r\n                                value={this.state.pagamiento_total}\r\n                                disabled\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group col-md-6\">\r\n                            <label>Vuelto: </label>\r\n                            <NumericFormat                                     \r\n                                thousandSeparator = \".\"\r\n                                decimalSeparator = \",\"\r\n                                className=\"form-control\"\r\n                                value={this.state.pagamiento_vuelto}\r\n                                disabled\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n\r\n            <div id=\"PanelCliente\" className=\"container d-none\">                 \r\n                <form onSubmit={this.onSubtmitCliente}>\r\n                    <div className=\"row\">\r\n                        <div className=\"form-group col-md-12\">\r\n                            <label>Buscar Cliente Registrado: </label>\r\n                            <Select           \r\n                                autoFocus={true}\r\n                                ref={c => (this._inputBuscarCliente = c)}\r\n                                noOptionsMessage={() => 'Sin resultados'}\r\n                                value={this.state.clienteSelected} \r\n                                options={this.state.clienteOptions} \r\n                                onChange={this.onChangeCliente}  \r\n                                onKeyDown={this.onKeyPressBuscarCliente}                      \r\n                                required/>\r\n                        </div>   \r\n                        <hr className=\"solid\"></hr>         \r\n                        <h3>Cliente</h3>            \r\n                        <div className=\"row\">\r\n                        <div className=\"form-group col-md-6\">\r\n                            <label>Ruc: </label>\r\n                            <NumericFormat \r\n                                thousandSeparator = \".\"\r\n                                decimalSeparator = \"_\"                               \r\n                                required\r\n                                className=\"form-control\"\r\n                                value={this.state.ruc}\r\n                                onChange={this.onChangeRuc}\r\n                            />\r\n                        </div> \r\n                        <div className=\"form-group col-md-6\">\r\n                            <label>DIV: </label>\r\n                            <input type=\"number\" \r\n                                disabled\r\n                                id=\"idDiv\"\r\n                                className=\"form-control\"\r\n                                value={this.state.div}                                    \r\n                            />\r\n                        </div>                          \r\n                        <div className=\"form-group col-md-12\">\r\n                            <label>Razon Social: </label>\r\n                            <input type=\"text\" \r\n                                required                                    \r\n                                className=\"form-control\"\r\n                                value={this.state.razonsocial}\r\n                                onChange={this.onChangeRazonSocial}\r\n                            />\r\n                        </div> \r\n                        </div>     \r\n                    </div>                      \r\n\r\n                    <div className=\"form-group d-none\">\r\n                        <button type=\"submit\" className=\"btn btn-warning\"></button>\r\n                    </div>                                \r\n                </form>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport CajaDetallesForm from './caja-detalles-form.component';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrash, faArrowLeft } from '@fortawesome/free-solid-svg-icons';\r\nimport UserContext  from '../../UserContext';\r\nconst { convertMiles } = require('../../utils/utils.js')\r\n\r\nexport default class CajaDetallesList extends Component{\r\n    static contextType = UserContext;\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            datos: [],\r\n            ultimo_vuelto: '',\r\n            loading: true,\r\n            caja:{},\r\n            idUpdate: '',\r\n            didUpdate: true\r\n        }\r\n        this.datalist = this.datalist.bind(this);\r\n    }\r\n    irCaja = () =>{\r\n        window.location.href = \"./Caja\";\r\n    }\r\n    updateUltimoVuelto = (ultimo_vuelto) =>{\r\n        this.setState({\r\n            ultimo_vuelto\r\n        })\r\n    }\r\n\r\n    updateList = async () => {\r\n        const queryParameters = new URLSearchParams(window.location.search);\r\n        const id = queryParameters.get(\"id\");\r\n\r\n        await axios.get(process.env.REACT_APP_SERVER_URL + \"/cajas-detalles/estado/\"+id+\"/Agregado\")\r\n            .then(response => {\r\n                this.setState({\r\n                    datos: response.data,\r\n                    loading: false\r\n                }, () => console.log(this.state))                  \r\n            })\r\n            .catch(err => console.log(err))\r\n\r\n        //Pagina la lista\r\n        //window.paginar('list-group','list-group-item',true);\r\n    }\r\n\r\n    componentDidMount(){\r\n        document.querySelector('.content-wrapper').style.marginLeft = \"5px\";\r\n        this.updateList(); //Obteniendo los Detalles Caja\r\n\r\n        this.getCaja(); //Obtener Caja\r\n    }\r\n\r\n    getCaja = async () => {\r\n        const queryParameters = new URLSearchParams(window.location.search);\r\n        const id = queryParameters.get(\"id\");\r\n        console.log('id',id)\r\n        await axios.get(process.env.REACT_APP_SERVER_URL  + \"/cajas/\"+id)\r\n            .then(response => {\r\n                const caja = response.data;\r\n                console.log('caja',caja);\r\n                this.setState({\r\n                    caja, ultimo_vuelto: caja.ultimoVuelto\r\n                })                  \r\n            })\r\n            .catch(err => console.log(err))      \r\n    }\r\n\r\n    deleteData = async (jsondatos) => {\r\n        await axios.delete(process.env.REACT_APP_SERVER_URL + \"/cajas-detalles/\"+jsondatos._id)\r\n            .then(res => console.log(res.data))\r\n            .catch(err => console.log(err))\r\n\r\n        this.setState({\r\n            datos: this.state.datos.filter(el => el._id !== jsondatos._id)\r\n        });\r\n    }\r\n\r\n    updateData = (jsondatos) => {this.setState({idUpdate: jsondatos._id})}\r\n    createData = (id) => {this.setState({idUpdate: id})}\r\n\r\n    datalist(){\r\n        return this.state.datos.map((dato, index) => {            \r\n            return (\r\n                <li className=\"list-productos list-group-item\" key={dato._id}>\r\n                    <div className=\"col-md-4\">\r\n                        {(index+1) + \"- \"+dato.inventario.descripcion}\r\n                    </div>\r\n                    <div className=\"col-md-2 text-right\">{convertMiles(dato.cantidad)}</div>\r\n                    <div className=\"col-md-2 text-right\">{convertMiles(dato.precio)}</div>\r\n                    <div className=\"col-md-2 text-right\">{convertMiles(dato.total)}</div>\r\n                    <div className=\"col-md-2 text-right\">\r\n                        {/* <button onClick={() => this.updateData(dato)} type=\"button\" className=\"btn btn-light btn-sm mr-1\"><FontAwesomeIcon icon={faEdit} /></button> */}\r\n                        <button onClick={() => this.deleteData(dato)} type=\"button\" className=\"btn btn-danger btn-sm\"><FontAwesomeIcon icon={faTrash} /></button>\r\n                    </div>\r\n                </li>)\r\n        })\r\n    }\r\n\r\n    printFactura = async (datos) => {       \r\n        const factura = {\r\n            ruc: datos.cliente.ruc,\r\n            razonSocial: datos.cliente.razonsocial,\r\n            timbrado: datos.timbrado.numero,\r\n            numeroComprobante: datos.timbrado.comprobante,\r\n            recibido: parseInt((datos.recibido+\"\").replace(/\\./gi,'')),\r\n            total: parseInt((datos.total+\"\").replace(/\\./gi,'')),\r\n            vuelto: parseInt((datos.vuelto+\"\").replace(/\\./gi,'')),\r\n            user_created: datos.user_created,\r\n            user_updated: datos.user_updated\r\n        }\r\n        await axios.post(process.env.REACT_APP_SERVER_URL + '/facturas/add',factura)\r\n        .then( response => {\r\n            let arrayIDsDetalles = [];\r\n            this.state.datos.forEach(record => {\r\n                const { _id } = record;\r\n                arrayIDsDetalles.push(_id);\r\n            })\r\n\r\n            const cajaDetalles = { \r\n                ids: arrayIDsDetalles,\r\n                factura: response.data.id\r\n            };\r\n\r\n            //Falta Obtener el ultimo numero del comprobante y actualizarlo\r\n             axios.post(process.env.REACT_APP_SERVER_URL + '/cajas-detalles/update-factura',cajaDetalles)\r\n            .catch(err => console.log(err));\r\n\r\n            //Actualizando el stock de los productos\r\n              axios.post(process.env.REACT_APP_SERVER_URL + '/inventarios/update-stock',this.state.datos)\r\n            .catch(err => console.log(err));\r\n\r\n            //Imprimiendo la factura\r\n            this.openPrintFactura(datos);\r\n        })\r\n        .catch(err => console.log(err));\r\n        \r\n        const caja = {\r\n            id: this.state.caja._id,\r\n            ultimoVuelto: parseInt((datos.vuelto+\"\").replace(/\\./gi,''))\r\n        }\r\n        \r\n        //Guardando ultimo vuelto en caja\r\n        await axios.post(process.env.REACT_APP_SERVER_URL + '/cajas/ultimoVuelto',caja)\r\n            .catch(err => console.log(err));\r\n\r\n        //Limpiando los seleccionados\r\n        this.setState({\r\n            ultimo_vuelto: caja.ultimoVuelto,\r\n            datos: []\r\n        })                \r\n    }\r\n\r\n    \r\n\r\n    openPrintFactura = (datos) => {\r\n        return new Promise((resolve, reject) => {\r\n\r\n            const table = document.createElement('table');\r\n            let headerRow = document.createElement('tr');\r\n            let th = document.createElement('th');\r\n            th.colSpan = 4;\r\n            th.textContent = datos.timbrado.nombreEmpresa;\r\n            headerRow.appendChild(th);\r\n            table.appendChild(headerRow);\r\n\r\n            /*\r\n            headerRow = document.createElement('tr');\r\n            th = document.createElement('td');\r\n            th.colSpan = 4;\r\n            th.textContent = datos.timbrado.ruc;\r\n            headerRow.appendChild(th);\r\n            table.appendChild(headerRow);\r\n    */\r\n\r\n            headerRow = document.createElement('tr');\r\n            th.colSpan = 4;\r\n            th = document.createElement('td');\r\n            //th.textContent = \"Comprobante #\" + datos.timbrado.comprobante;\r\n            th.textContent = \"Comprobante #\" + datos.timbrado.comprobante;\r\n            headerRow.appendChild(th);\r\n            table.appendChild(headerRow);\r\n\r\n            headerRow = document.createElement('tr');\r\n            const headers = process.env.REACT_APP_FACTURA_HEADERS.split(\",\");\r\n            headers.forEach(header => {\r\n                const th = document.createElement('th');\r\n                th.textContent = header;\r\n                headerRow.appendChild(th);\r\n            });\r\n            table.appendChild(headerRow);\r\n            \r\n            this.state.datos.forEach(record => {\r\n                const row = document.createElement('tr');\r\n                const { inventario, cantidad, precio, total } = record;\r\n                const data = [inventario.descripcion , convertMiles(cantidad), convertMiles(precio), convertMiles(total)]\r\n                \r\n                data.forEach(value => {\r\n                    const td = document.createElement('td');\r\n                    td.textContent = value;\r\n                    row.appendChild(td);\r\n                });\r\n                \r\n                table.appendChild(row);\r\n            });\r\n\r\n            console.log(table);\r\n\r\n            const printWindow = window.open('', 'Print', 'height=600,width=800');\r\n            printWindow.document.write(table.outerHTML);\r\n            printWindow.print();\r\n\r\n            resolve(printWindow.close());            \r\n        });\r\n        \r\n    }\r\n\r\n    datalistTotales(){\r\n        let precio = 0;\r\n        let total = 0;\r\n        let cantidad = 0;\r\n        this.state.datos.map((dato) => {    \r\n            cantidad += dato.cantidad;\r\n            precio += dato.precio;\r\n            total += dato.total ;\r\n        })\r\n        \r\n        \r\n        return (\r\n            <div className=\"card-footer font-weight-bold\">     \r\n                <div className=\"row\">\r\n                    <div className=\"col-md-4 text-right\">Totales</div>\r\n                    <div className=\"col-md-2 text-right\">{convertMiles(cantidad)}</div>\r\n                    <div className=\"col-md-2 text-right\">{convertMiles(precio)}</div>\r\n                    <div id=\"totales_total\" className=\"col-md-2 text-right\">{convertMiles(total)}</div>\r\n                </div>\r\n            </div>\r\n        )\r\n        \r\n    }\r\n\r\n    render(){        \r\n        return(            \r\n            <div className=\"content-wrapper\" id=\"content\">                \r\n                <div className=\"row\">\r\n                    <div className=\"col-md-3\">\r\n                        <h2>{this.state.caja.cajaConf && 'Detalle ' + this.state.caja.cajaConf.descripcion}</h2>                        \r\n                    </div>\r\n                    <div className=\"col-md-5\">\r\n                        <h2 className='text-center'>{'Ultimo Vuelto '+ (this.state.ultimo_vuelto ? convertMiles(this.state.ultimo_vuelto) : '0')+' Gs.'}</h2>                        \r\n                    </div>\r\n                    \r\n                    <div className=\"col-md-8\">\r\n                        <button onClick={() => this.irCaja()} type=\"button\" className=\"btn btn-warning btn-sm mb-1\"><FontAwesomeIcon icon={faArrowLeft} /> Volvar a Caja</button>\r\n                        <div className=\"card\">                            \r\n                            <div className=\"card-header\">                                \r\n                                <div className=\"card-title row mb-0\">  \r\n                                    <div className=\"col-md-4\"># - Decripcion</div>\r\n                                    <div className=\"col-md-2 text-right\">Cantidad</div>\r\n                                    <div className=\"col-md-2 text-right\">Precio</div>\r\n                                    <div className=\"col-md-2 text-right\">Total</div>\r\n                                    <div className=\"col-md-2 text-right\">\r\n                                        {/* <button onClick={() => this.createData(\"NEW\")} type=\"button\" className=\"btn btn-warning btn-sm\"><FontAwesomeIcon icon={faPlus} /> Nuevo</button> */}\r\n                                    </div>                                 \r\n                                </div>\r\n                            </div>\r\n                            <ul id=\"list\" className=\"list-group overflow-auto\">\r\n                                {this.state.loading  ? \r\n                                    <Spinner animation=\"border\" variant=\"primary\" style={{margin:\"25px\",alignSelf:\"center\"}}/> \r\n                                :\r\n                                    this.state.datos.length === 0 ?\r\n                                        <div className=\"col-md-11 text-center m-3\">Sin registros encontrados</div>\r\n                                    :\r\n                                        this.datalist()\r\n                                }                                \r\n                            </ul>            \r\n                            {this.state.datos.length > 0 ? this.datalistTotales() : ''}         \r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-4\">                        \r\n                        <CajaDetallesForm caja={this.state.caja} onParentPrintFactura={this.printFactura} onUpdateParentList={this.updateList} onUpdateParentUltimoVuelto={this.updateUltimoVuelto}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport UserContext  from '../../UserContext';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport default class CajaConfigForm extends Component{\r\n    static contextType = UserContext;\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {  \r\n            codigo:'',\r\n            descripcion: '',\r\n            user_created: '',\r\n            user_updated: '',\r\n            textButton:'Crear',\r\n            titleForm: 'Crear Caja',\r\n            idUpdate: 'NEW'\r\n        };        \r\n    }\r\n     //Metodo que se ejecuta antes del render\r\n     componentDidMount(){\r\n        const currentUser = this.context.currentUser;\r\n        this.setState({user_created: currentUser.name, user_updated: currentUser.name}) \r\n    }\r\n\r\n    //Metodo que obtiene cualquier actualizacion de otros componentes donde fue llamado\r\n    componentDidUpdate(){        \r\n        if(this.state.idUpdate !== this.props.idUpdate ){\r\n            this.setState({ idUpdate: this.props.idUpdate});\r\n            if(this.props.idUpdate !== \"NEW\" && this.props.idUpdate !== \"\" ){\r\n                axios.get(process.env.REACT_APP_SERVER_URL + \"/cajas-config/\"+this.props.idUpdate)\r\n                .then(response => {\r\n                    this.setState({    \r\n                        descripcion: response.data.descripcion,   \r\n                        textButton:'Editar',\r\n                        titleForm: 'Editar Caja'\r\n                    })\r\n                })\r\n                .catch(err => console.log(err));\r\n            }else{\r\n                this.setState({\r\n                    descripcion:'',\r\n                    textButton:'Crear',\r\n                    titleForm: 'Crear Caja',\r\n                    idUpdate: this.props.idUpdate\r\n                });\r\n            }\r\n        }\r\n    }    \r\n    \r\n    onChangeDescripcion = (e) => {this.setState({descripcion: e.target.value})}\r\n    \r\n    showNotification(isSuccess){\r\n        document.querySelector('#alert').classList.replace('hide','show');\r\n        if(isSuccess === true){\r\n            document.querySelector('#alert').classList.replace('alert-warning','alert-success');\r\n            document.querySelector('#alert #text').innerHTML = '<strong>Exito!</strong> Los datos han sido actualizados.'\r\n        }else{\r\n            document.querySelector('#alert').classList.replace('alert-success','alert-warning');\r\n            document.querySelector('#alert #text').innerHTML = '<strong>Error!</strong> Contacte con el administrador.'\r\n        }\r\n        //Enfocar el input\r\n        this._input.focus(); \r\n        //actualizar Lista\r\n        this.props.onUpdateParentList('true');\r\n        setTimeout(function(){  document.querySelector('#alert').classList.replace('show','hide'); }, 3000);\r\n    }\r\n\r\n    handleCloseAlert = () =>{\r\n        document.querySelector('#alert').classList.replace('show','hide');\r\n    }\r\n    \r\n    onSubtmit = (e) => {\r\n        e.preventDefault();\r\n        if(this.props.idUpdate === \"NEW\" || this.props.idUpdate === \"\" ){\r\n            const caja = {\r\n                descripcion: this.state.descripcion,\r\n                user_created: this.state.user_created,\r\n                user_updated: this.state.user_updated\r\n            }\r\n            axios.post(process.env.REACT_APP_SERVER_URL + '/cajas-config/add',caja)\r\n                .then(res => this.showNotification(true))\r\n                .catch(err => this.showNotification(false));\r\n\r\n                this.setState({\r\n                    descripcion: '',\r\n                    textButton:'Crear',\r\n                    titleForm: 'Crear Inventario',\r\n                    idUpdate:'NEW'\r\n                })\r\n                   \r\n        }else{\r\n            const caja = {\r\n                descripcion: this.state.descripcion,\r\n                user_updated: this.state.user_updated\r\n            }\r\n            axios.post(process.env.REACT_APP_SERVER_URL+ '/cajas-config/update/'+this.state.idUpdate,caja)\r\n                .then(res => this.showNotification(true))\r\n                .catch(err => this.showNotification(false));\r\n        }\r\n\r\n        \r\n    }   \r\n    \r\n    render(){          \r\n        return(\r\n            <div className=\"container\"> \r\n                <h3>{this.state.titleForm}</h3>\r\n                <form onSubmit={this.onSubtmit}>\r\n                        <div className=\"row\">\r\n                            <div className=\"form-group col-md-12\">\r\n                                <label>Descripcion: </label>\r\n                                <input type=\"text\" \r\n                                    autoFocus={true}\r\n                                    ref={c => (this._input = c)}\r\n                                    required\r\n                                    className=\"form-control\"\r\n                                    value={this.state.descripcion}\r\n                                    onChange={this.onChangeDescripcion} \r\n                                />\r\n                            </div>   \r\n                        </div>\r\n                    <div className=\"form-group\">\r\n                        <button type=\"submit\" className=\"btn btn-warning\"><FontAwesomeIcon icon={faArrowLeft}/> {this.state.textButton}</button>\r\n                    </div>        \r\n                    <div id=\"alert\" className=\"alert alert-success alert-dismissible fade hide\" role=\"alert\">\r\n                        <span id=\"text\"></span>\r\n                        <button type=\"button\" className=\"close\" onClick={this.handleCloseAlert}>\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n                    </div>                                \r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport CajaConfigForm from './caja-config-form.component';\r\nimport { Spinner } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus, faEdit, faTrash } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport default class CajasConfigList extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            datos: [],\r\n            loading: true,\r\n            idUpdate: '',\r\n            didUpdate: true\r\n        }\r\n        this.datalist = this.datalist.bind(this);\r\n    }\r\n\r\n    updateList = async () => {\r\n        \r\n        await axios.get(process.env.REACT_APP_SERVER_URL + \"/cajas-config/\")\r\n            .then(response => {\r\n                console.log(response.data)\r\n                this.setState({\r\n                    datos: response.data,\r\n                    loading: false\r\n                })  \r\n            })\r\n            .catch(err => console.log(err))\r\n        //Pagina la lista\r\n        //window.paginar('list-group','list-group-item',true);\r\n    }\r\n\r\n    componentDidMount(){this.updateList()}\r\n    componentDidUpdate(){}\r\n\r\n    deleteData = async (jsondatos) => {\r\n        await axios.delete(process.env.REACT_APP_SERVER_URL + \"/cajas-config/\"+jsondatos._id)\r\n            .then(res => {\r\n                this.setState({\r\n                    datos: this.state.datos.filter(el => el._id !== jsondatos._id)\r\n                });\r\n            \r\n            })\r\n            .catch(err => console.log(err))        \r\n    }\r\n\r\n    updateData = (jsondatos) => {this.setState({idUpdate: jsondatos._id})}\r\n    createData = (id) => {this.setState({idUpdate: id})}\r\n\r\n    datalist(){\r\n        return this.state.datos.map(dato => {\r\n            return (\r\n                <li className=\"list-group-item\" key={dato._id}>\r\n                    <div className=\"col-md-10\">{dato.descripcion}</div>\r\n                    <div className=\"col-md-2 text-right\">\r\n                        <button onClick={() => this.updateData(dato)} type=\"button\" className=\"btn btn-light btn-sm mr-1\"><FontAwesomeIcon icon={faEdit} /></button>\r\n                        <button onClick={() => this.deleteData(dato)} type=\"button\" className=\"btn btn-danger btn-sm\"><FontAwesomeIcon icon={faTrash} /></button>\r\n                    </div>\r\n                </li>)\r\n        })\r\n    }\r\n    render(){       \r\n        return(\r\n            <div className=\"content-wrapper\" id=\"content\">\r\n                <h2>Cajas Configuraciones</h2>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-header\">\r\n                                <div className=\"card-title row mb-0\">  \r\n                                    <div className=\"col-md-10\">Descripcion</div>\r\n                                    <div className=\"col-md-2 text-right\">\r\n                                        <button onClick={() => this.createData(\"NEW\")} type=\"button\" className=\"btn btn-warning btn-sm\"><FontAwesomeIcon icon={faPlus} /> Nuevo</button>\r\n                                    </div>                                 \r\n                                </div>\r\n                            </div>\r\n                            <input className=\"form-control inputsearch\" type=\"search\" placeholder=\"Busqueda (minimo 3 letras)...\" />\r\n                            <ul id=\"list\" className=\"list-group\">\r\n                                {this.state.loading  ? \r\n                                    <Spinner animation=\"border\" variant=\"primary\" style={{margin:\"25px\",alignSelf:\"center\"}}/> \r\n                                :\r\n                                    this.state.datos.length === 0 ?\r\n                                        <div className=\"col-md-12 text-center m-3\">Sin registros encontrados</div>\r\n                                    :\r\n                                        this.datalist()\r\n                                }\r\n                            </ul>                     \r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <CajaConfigForm idUpdate={this.state.idUpdate} onUpdateParentList={this.updateList}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport UserContext  from '../../UserContext';\r\nimport { NumericFormat } from 'react-number-format';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\r\nimport { getDiv } from '../../utils/utils.js'\r\n\r\nexport default class ClienteForm extends Component{\r\n    static contextType = UserContext;\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {  \r\n            ruc:'',\r\n            div:'',\r\n            razonsocial:'',\r\n            user_created: '',\r\n            user_updated: '',\r\n            textButton:'Crear',\r\n            titleForm: 'Crear Cliente',\r\n            idUpdate: 'NEW'\r\n        };        \r\n    }\r\n    //Metodo que obtiene cualquier actualizacion de otros componentes donde fue llamado\r\n    componentDidUpdate(){        \r\n        if(this.state.idUpdate !== this.props.idUpdate ){\r\n            this.setState({ idUpdate: this.props.idUpdate});\r\n            if(this.props.idUpdate !== \"NEW\" && this.props.idUpdate !== \"\" ){\r\n                axios.get(process.env.REACT_APP_SERVER_URL + \"/clientes/\"+this.props.idUpdate)\r\n                .then(response => {\r\n                    this.setState({\r\n                        ruc: response.data.ruc,\r\n                        razonsocial: response.data.razonsocial,\r\n                        div: response.data.div,\r\n                        textButton:'Editar',\r\n                        titleForm: 'Editar Cliente'\r\n                    })\r\n                })\r\n                .catch(err => console.log(err));\r\n            }else{\r\n                this.setState({\r\n                    ruc:'',\r\n                    div:'',\r\n                    razonsocial:'',\r\n                    textButton:'Crear',\r\n                    titleForm: 'Crear Cliente',\r\n                    idUpdate: this.props.idUpdate\r\n                });\r\n            }\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        const currentUser = this.context.currentUser;\r\n        this.setState({user_created: currentUser.name, user_updated: currentUser.name}) \r\n\r\n        //Enfocar el input\r\n        this._input.focus(); \r\n    }\r\n\r\n    onChangeRazonSocial = (e) => {this.setState({razonsocial: e.target.value})}\r\n    onChangeRuc = (e) => {\r\n        this.setState({\r\n            ruc: e.target.value,\r\n            div: getDiv(e.target.value)\r\n        })\r\n    }  \r\n    \r\n    showNotification(isSuccess){\r\n        document.querySelector('#alert').classList.replace('hide','show');\r\n        if(isSuccess === true){\r\n            document.querySelector('#alert').classList.replace('alert-warning','alert-success');\r\n            document.querySelector('#alert #text').innerHTML = '<strong>Exito!</strong> Los datos han sido actualizados.'\r\n        }else{\r\n            document.querySelector('#alert').classList.replace('alert-success','alert-warning');\r\n            document.querySelector('#alert #text').innerHTML = '<strong>Error!</strong> Contacte con el administrador.'\r\n        }\r\n        //Enfocar el input\r\n        this._input.focus(); \r\n        //actualizar Lista\r\n        this.props.onUpdateParentList('true');\r\n        setTimeout(function(){  document.querySelector('#alert').classList.replace('show','hide'); }, 3000);\r\n    }\r\n\r\n    handleCloseAlert = () =>{\r\n        document.querySelector('#alert').classList.replace('show','hide');\r\n    }\r\n    \r\n    onSubtmit = (e) => {\r\n        e.preventDefault();\r\n        if(this.props.idUpdate === \"NEW\" || this.props.idUpdate === \"\" ){\r\n            const clientes = {\r\n                ruc: this.state.ruc,\r\n                div: this.state.div,\r\n                razonsocial: this.state.razonsocial,\r\n                user_created: this.state.user_created,\r\n                user_updated: this.state.user_updated\r\n            }\r\n            axios.post(process.env.REACT_APP_SERVER_URL + '/clientes/add',clientes)\r\n                .then(res => this.showNotification(true))\r\n                .catch(err => this.showNotification(false));\r\n            this.setState({\r\n                ruc:'',\r\n                div:'',\r\n                razonsocial:'',\r\n                textButton:'Crear',\r\n                titleForm: 'Crear Cliente',\r\n                idUpdate:'NEW'\r\n            })       \r\n        }else{\r\n            const clientes = {\r\n                ruc: this.state.ruc,\r\n                razonsocial: this.state.razonsocial,\r\n                div: this.state.div,\r\n                user_updated: this.state.user_updated\r\n            }\r\n            axios.post(process.env.REACT_APP_SERVER_URL + '/clientes/update/'+this.state.idUpdate,clientes)\r\n                .then(res => this.showNotification(true))\r\n                .catch(err => this.showNotification(false));\r\n        }\r\n    }   \r\n    \r\n    render(){          \r\n        return(\r\n            <div className=\"container\"> \r\n                <h3>{this.state.titleForm}</h3>\r\n                <form onSubmit={this.onSubtmit}>\r\n                        <div className=\"row\">\r\n                            <div className=\"form-group col-md-6\">\r\n                                <label>Ruc: </label>\r\n                                <NumericFormat \r\n                                    thousandSeparator = \".\"\r\n                                    decimalSeparator = \"_\"\r\n                                    autoFocus={true}       \r\n                                    getInputRef={c => (this._input = c)}                                 \r\n                                    required\r\n                                    className=\"form-control\"\r\n                                    value={this.state.ruc}\r\n                                    onChange={this.onChangeRuc}\r\n                                />\r\n                            </div>      \r\n                            <div className=\"form-group col-md-6\">\r\n                                <label>DIV: </label>\r\n                                <input type=\"number\" \r\n                                    disabled\r\n                                    id=\"idDiv\"\r\n                                    className=\"form-control\"\r\n                                    value={this.state.div}                                    \r\n                                />\r\n                            </div>                          \r\n                            <div className=\"form-group col-md-12\">\r\n                                <label>Razon Social: </label>\r\n                                <input type=\"text\" \r\n                                    required                                    \r\n                                    className=\"form-control\"\r\n                                    value={this.state.razonsocial}\r\n                                    onChange={this.onChangeRazonSocial}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    <div className=\"form-group\">\r\n                        <button type=\"submit\" className=\"btn btn-warning\"><FontAwesomeIcon icon={faArrowLeft}/> {this.state.textButton}</button>\r\n                    </div>        \r\n                    <div id=\"alert\" className=\"alert alert-success alert-dismissible fade hide\" role=\"alert\">\r\n                        <span id=\"text\"></span>\r\n                        <button type=\"button\" className=\"close\" onClick={this.handleCloseAlert}>\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n                    </div>                                \r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport ClienteForm from './cliente-form.component';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faPlus, faEdit, faTrash} from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport default class ClienteList extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            datos: [],\r\n            loading: true,\r\n            idUpdate: '',\r\n            didUpdate: true\r\n        }\r\n        this.datalist = this.datalist.bind(this);\r\n    }\r\n\r\n    updateList = async () => {\r\n        await axios.get(process.env.REACT_APP_SERVER_URL + \"/clientes/\")\r\n            .then(response => {\r\n                this.setState({\r\n                    datos: response.data,\r\n                    loading: false\r\n                })\r\n            })\r\n            .catch(err => console.log(err))\r\n\r\n        //Pagina la lista\r\n        //window.paginar('list-group','list-group-item',true);\r\n    }\r\n\r\n    componentDidMount(){      \r\n        this.updateList();\r\n    }\r\n    componentDidUpdate(){}\r\n\r\n    deleteData = async (jsondatos) => {\r\n        await axios.delete(process.env.REACT_APP_SERVER_URL + \"/clientes/\"+jsondatos._id)\r\n            .then(res => console.log(res.data))\r\n            .catch(err => console.log(err))\r\n\r\n        this.setState({\r\n            datos: this.state.datos.filter(el => el._id !== jsondatos._id)\r\n        });\r\n    }\r\n\r\n    updateData = (jsondatos) => {this.setState({idUpdate: jsondatos._id})}\r\n    createData = (id) => {this.setState({idUpdate: id})}\r\n\r\n    datalist(){\r\n        return this.state.datos.map(dato => {\r\n            return (\r\n                <li className=\"list-group-item\" key={dato._id}>\r\n                    <div className=\"col-md-4\">{dato.ruc + \"-\" + dato.div}</div>\r\n                    <div className=\"col-md-6\">{dato.razonsocial}</div>\r\n                    <div className=\"col-md-2 text-right\">\r\n                        <button onClick={() => this.updateData(dato)} type=\"button\" className=\"btn btn-light btn-sm mr-1\"><FontAwesomeIcon icon={faEdit} /></button>\r\n                        <button onClick={() => this.deleteData(dato)} type=\"button\" className=\"btn btn-danger btn-sm\"><FontAwesomeIcon icon={faTrash} /></button>\r\n                    </div>\r\n                </li>)\r\n        })\r\n    }\r\n    render(){       \r\n        return(\r\n            <div className=\"content-wrapper\" id=\"content\">\r\n                <h2>Clientes</h2>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-header\">\r\n                                <div className=\"card-title row mb-0\">  \r\n                                    <div className=\"col-md-4\">Ruc</div>\r\n                                    <div className=\"col-md-6\">Razon Social</div>\r\n                                    <div className=\"col-md-2 text-right\">\r\n                                        <button onClick={() => this.createData(\"NEW\")} type=\"button\" className=\"btn btn-warning btn-sm\"><FontAwesomeIcon icon={faPlus} /> Nuevo</button>\r\n                                    </div>                                 \r\n                                </div>\r\n                            </div>\r\n                            <input className=\"form-control inputsearch\" type=\"search\" placeholder=\"Busqueda (minimo 3 letras)...\" />\r\n                            <ul id=\"list\" className=\"list-group\">\r\n                                {this.state.loading  ? \r\n                                    <Spinner animation=\"border\" variant=\"primary\" style={{margin:\"25px\",alignSelf:\"center\"}}/> \r\n                                :\r\n                                    this.state.datos.length === 0 ?\r\n                                        <div className=\"col-md-12 text-center m-3\">Sin registros encontrados</div>\r\n                                    :\r\n                                        this.datalist()\r\n                                }\r\n                            </ul>                     \r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <ClienteForm idUpdate={this.state.idUpdate} onUpdateParentList={this.updateList}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport UserContext  from '../../UserContext';\r\nimport DatePicker from 'react-datepicker';\r\nimport MaskedInput from 'react-maskedinput';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { NumericFormat } from 'react-number-format';\r\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport default class TimbradoForm extends Component{\r\n    static contextType = UserContext;\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {  \r\n            ruc:'',\r\n            nombreEmpresa:'',\r\n            numero:'',\r\n            comprobante: '',\r\n            vencimiento:'',\r\n            user_created: '',\r\n            user_updated: '',\r\n            textButton:'Crear',\r\n            titleForm: 'Crear Timbrado',\r\n            idUpdate: 'NEW'\r\n        };        \r\n    }\r\n    //Metodo que obtiene cualquier actualizacion de otros componentes donde fue llamado\r\n    componentDidUpdate(){        \r\n        if(this.state.idUpdate !== this.props.idUpdate ){\r\n            this.setState({ idUpdate: this.props.idUpdate});\r\n            if(this.props.idUpdate !== \"NEW\" && this.props.idUpdate !== \"\" ){\r\n                axios.get(process.env.REACT_APP_SERVER_URL + \"/timbrados/\"+this.props.idUpdate)\r\n                .then(response => {\r\n                    this.setState({\r\n                        ruc: response.data.ruc,\r\n                        nombreEmpresa: response.data.nombreEmpresa,\r\n                        numero: response.data.numero,\r\n                        vencimiento: new Date(response.data.vencimiento),\r\n                        textButton:'Editar',\r\n                        titleForm: 'Editar Timbrado'\r\n                    })\r\n                })\r\n                .catch(err => console.log(err));\r\n            }else{\r\n                this.setState({\r\n                    ruc:'',\r\n                    div:'',\r\n                    razonsocial:'',\r\n                    textButton:'Crear',\r\n                    titleForm: 'Crear Timbrado',\r\n                    idUpdate: this.props.idUpdate\r\n                });\r\n            }\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        const currentUser = this.context.currentUser;\r\n        this.setState({user_created: currentUser.name, user_updated: currentUser.name}) \r\n\r\n        //Enfocar el input\r\n        this._input.focus(); \r\n    }\r\n\r\n    onChangeNumero = (e) => {this.setState({numero: e.target.value})}\r\n    onChangeComprobante = (e) => {this.setState({comprobante: e.target.value})}\r\n    onChangeNombreEmpresa = (e) => {this.setState({nombreEmpresa: e.target.value})}\r\n    onChangeRuc = (e) => { this.setState({ruc: e.target.value})}  \r\n    onChangeVencimiento = (date) => { this.setState({ vencimiento: date })} \r\n    \r\n    showNotification(isSuccess){\r\n        document.querySelector('#alert').classList.replace('hide','show');\r\n        if(isSuccess === true){\r\n            document.querySelector('#alert').classList.replace('alert-warning','alert-success');\r\n            document.querySelector('#alert #text').innerHTML = '<strong>Exito!</strong> Los datos han sido actualizados.'\r\n        }else{\r\n            document.querySelector('#alert').classList.replace('alert-success','alert-warning');\r\n            document.querySelector('#alert #text').innerHTML = '<strong>Error!</strong> Contacte con el administrador.'\r\n        }\r\n        //Enfocar el input\r\n        this._input.focus(); \r\n        //actualizar Lista\r\n        this.props.onUpdateParentList('true');\r\n        setTimeout(function(){  document.querySelector('#alert').classList.replace('show','hide'); }, 3000);\r\n    }\r\n\r\n    handleCloseAlert = () =>{\r\n        document.querySelector('#alert').classList.replace('show','hide');\r\n    }\r\n    \r\n    onSubtmit = (e) => {\r\n        e.preventDefault();\r\n        if(this.props.idUpdate === \"NEW\" || this.props.idUpdate === \"\" ){\r\n            const timbrado = {\r\n                ruc: this.state.ruc,\r\n                nombreEmpresa: this.state.nombreEmpresa,\r\n                numero: this.state.numero,\r\n                comprobante: this.state.comprobante,\r\n                estado: 'desactivado',\r\n                vencimiento: this.state.vencimiento,\r\n                user_created: this.state.user_created,\r\n                user_updated: this.state.user_updated\r\n            }\r\n            axios.post(process.env.REACT_APP_SERVER_URL + '/timbrados/add',timbrado)\r\n                .then(res => this.showNotification(true))\r\n                .catch(err => this.showNotification(false));\r\n            this.setState({\r\n                ruc:'',\r\n                nombreEmpresa:'',\r\n                numero:'',                \r\n                comprobante:'',\r\n                vencimiento:'',\r\n                textButton:'Crear',\r\n                titleForm: 'Crear Timbrado',\r\n                idUpdate:'NEW'\r\n            })       \r\n        }else{\r\n            const timbrado = {\r\n                ruc: this.state.ruc,\r\n                nombreEmpresa: this.state.nombreEmpresa,\r\n                numero: this.state.numero,\r\n                comprobante: this.state.comprobante,\r\n                vencimiento: this.state.vencimiento,\r\n                user_updated: this.state.user_updated\r\n            }\r\n            axios.post(process.env.REACT_APP_SERVER_URL + '/timbrados/update/'+this.state.idUpdate,timbrado)\r\n                .then(res => this.showNotification(true))\r\n                .catch(err => this.showNotification(false));\r\n        }\r\n    }   \r\n    \r\n    render(){          \r\n        return(\r\n            <div className=\"container\"> \r\n                <h3>{this.state.titleForm}</h3>\r\n                <form onSubmit={this.onSubtmit}>\r\n                        <div className=\"row\">\r\n                            <div className=\"form-group col-md-12\">\r\n                                <label>Nombre Empresa: </label>\r\n                                <input type=\"text\" \r\n                                    autoFocus={true}\r\n                                    ref={c => (this._input = c)}\r\n                                    required                                    \r\n                                    className=\"form-control\"\r\n                                    value={this.state.nombreEmpresa}\r\n                                    onChange={this.onChangeNombreEmpresa}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group col-md-6\">\r\n                                <label>Ruc: </label>\r\n                                <input type=\"text\" \r\n                                    required                                    \r\n                                    className=\"form-control\"\r\n                                    value={this.state.ruc}\r\n                                    onChange={this.onChangeRuc}\r\n                                />\r\n                            </div>  \r\n                            <div className=\"form-group col-md-6\">\r\n                                <label>Numero: </label>\r\n                                <NumericFormat \r\n                                    thousandSeparator = \"\"\r\n                                    decimalSeparator = \"_\"\r\n                                    required\r\n                                    className=\"form-control\"\r\n                                    value={this.state.numero}\r\n                                    onChange={this.onChangeNumero}\r\n                                />\r\n                            </div> \r\n                            <div className=\"form-group col-md-6\">\r\n                                <label>Comprobante: </label>\r\n                                <input type=\"text\" \r\n                                    required                                    \r\n                                    className=\"form-control\"\r\n                                    value={this.state.comprobante}\r\n                                    onChange={this.onChangeComprobante}\r\n                                />\r\n                            </div>    \r\n                            \r\n                            <div className=\"form-group vencimiento col-md-6\">\r\n                                <label>Vencimiento: </label>\r\n                                <DatePicker \r\n                                    className=\"form-control\" \r\n                                    required\r\n                                    locale=\"esp\"\r\n                                    dateFormat=\"dd/MM/yyyy\"\r\n                                    selected={this.state.vencimiento}\r\n                                    onChange={this.onChangeVencimiento}\r\n                                    showYearDropdown\r\n                                    isClearable\r\n                                    customInput={\r\n                                        <MaskedInput mask=\"11/11/1111\" placeholder=\"mm/dd/yyyy\" />\r\n                                    }\r\n                                />\r\n                            </div> \r\n                            \r\n                        </div>\r\n                    <div className=\"form-group\">\r\n                        <button type=\"submit\" className=\"btn btn-warning\"><FontAwesomeIcon icon={faArrowLeft}/> {this.state.textButton}</button>\r\n                    </div>        \r\n                    <div id=\"alert\" className=\"alert alert-success alert-dismissible fade hide\" role=\"alert\">\r\n                        <span id=\"text\"></span>\r\n                        <button type=\"button\" className=\"close\" onClick={this.handleCloseAlert}>\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n                    </div>                                \r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport  './css/switch-toggle.css';\r\n\r\nconst SwitchList = ({nameToggle, idToggle, onToggle}) => {\r\n    return(\r\n        <label className=\"menu-item switch\">\r\n            <input id={idToggle} type=\"radio\" name={nameToggle} onChange={onToggle}/>\r\n            <span className=\"slider rounded\" />\r\n        </label>\r\n\r\n    )\r\n}\r\n\r\nexport default SwitchList;","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport UserContext  from '../../UserContext';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport TimbradoForm from './timbrados-form.component';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faPlus, faEdit, faTrash} from '@fortawesome/free-solid-svg-icons';\r\nimport SwitchList from '../switch-toogle/switchList-toggle.component';\r\n\r\nexport default class TimbradosList extends Component{\r\n    static contextType = UserContext;\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            datos: [],\r\n            loading: true,\r\n            user: undefined,\r\n            idUpdate: '',\r\n            didUpdate: true\r\n        }\r\n        this.datalist = this.datalist.bind(this);\r\n    }\r\n\r\n    updateList = async () => {\r\n        await axios.get(process.env.REACT_APP_SERVER_URL + \"/timbrados/\")\r\n            .then(response => {\r\n                this.setState({\r\n                    datos: response.data,\r\n                    loading: false\r\n                })\r\n            })\r\n            .catch(err => console.log(err))\r\n\r\n        //Pagina la lista\r\n        //window.paginar('list-group','list-group-item',true);\r\n    }\r\n    onChangeCheckList = (dato) => {       \r\n        const timbrado = {\r\n            datos: this.state.datos.filter(el => el._id !== dato._id),\r\n            estado: 'activado',\r\n            user_updated: this.state.user\r\n        }\r\n        axios.post(process.env.REACT_APP_SERVER_URL + '/timbrados/activar/'+dato._id, timbrado)\r\n            .then(res => {\r\n                //console.log(res)\r\n            })\r\n            .catch(err => console.log(err));         \r\n    } \r\n\r\n    componentDidMount(){      \r\n        const currentUser = this.context.currentUser;\r\n        this.setState({user: currentUser.name}) \r\n        this.updateList();\r\n    }\r\n    componentDidUpdate(){\r\n        this.state.datos.map((dato) => {\r\n            if(dato.estado === 'activado'){\r\n                document.querySelector('#toggle_'+dato._id).checked = true;\r\n            }\r\n        })\r\n    }\r\n\r\n    deleteData = async (jsondatos) => {\r\n        await axios.delete(process.env.REACT_APP_SERVER_URL + \"/timbrados/\"+jsondatos._id)\r\n            .then(res => console.log(res.data))\r\n            .catch(err => console.log(err))\r\n\r\n        this.setState({\r\n            datos: this.state.datos.filter(el => el._id !== jsondatos._id)\r\n        });\r\n    }\r\n\r\n    updateData = (jsondatos) => {this.setState({idUpdate: jsondatos._id})}\r\n    createData = (id) => {this.setState({idUpdate: id})}\r\n\r\n    datalist(){\r\n        return this.state.datos.map((dato, index) => {\r\n            let dateExpira = new Date(dato.vencimiento);\r\n            let expiraString =  ((dateExpira.getDate() > 9) ? dateExpira.getDate() : ('0' + dateExpira.getDate()))+ '/' + ((dateExpira.getMonth() > 8) ? (dateExpira.getMonth() + 1) : ('0' + (dateExpira.getMonth() + 1))) + '/' + dateExpira.getFullYear();\r\n            \r\n            return (\r\n                <li className=\"list-group-item\" key={dato._id}>\r\n                    <div className=\"col-md-2 informante-check\">\r\n                        <SwitchList nameToggle=\"informanteToggle\" idToggle={\"toggle_\"+dato._id} onToggle={() => this.onChangeCheckList(dato,index)} />                        \r\n                    </div>\r\n                    <div className=\"col-md-2\">{dato.nombreEmpresa}</div>\r\n                    <div className=\"col-md-2\">{dato.ruc}</div>\r\n                    <div className=\"col-md-2\">{dato.numero}</div>\r\n                    <div className=\"col-md-2\">{expiraString}</div>\r\n                    <div className=\"col-md-2 text-right\">\r\n                        <button onClick={() => this.updateData(dato)} type=\"button\" className=\"btn btn-light btn-sm mr-1\"><FontAwesomeIcon icon={faEdit} /></button>\r\n                        <button onClick={() => this.deleteData(dato)} type=\"button\" className=\"btn btn-danger btn-sm\"><FontAwesomeIcon icon={faTrash} /></button>\r\n                    </div>\r\n                </li>)\r\n        })\r\n    }\r\n    render(){       \r\n        return(\r\n            <div className=\"content-wrapper\" id=\"content\">\r\n                <h2>Timbrados</h2>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-header\">\r\n                                <div className=\"card-title row mb-0\">  \r\n                                    <div className=\"col-md-2\">Activar</div>\r\n                                    <div className=\"col-md-2\">Nombre Empresa</div>\r\n                                    <div className=\"col-md-2\">Ruc</div>\r\n                                    <div className=\"col-md-2\">Numero</div>\r\n                                    <div className=\"col-md-2\">Vencimiento</div>\r\n                                    <div className=\"col-md-2 text-right\">\r\n                                        <button onClick={() => this.createData(\"NEW\")} type=\"button\" className=\"btn btn-warning btn-sm\"><FontAwesomeIcon icon={faPlus} /> Nuevo</button>\r\n                                    </div>                                 \r\n                                </div>\r\n                            </div>\r\n                            <input className=\"form-control inputsearch\" type=\"search\" placeholder=\"Busqueda (minimo 3 letras)...\" />\r\n                            <ul id=\"list\" className=\"list-group\">\r\n                                {this.state.loading  ? \r\n                                    <Spinner animation=\"border\" variant=\"primary\" style={{margin:\"25px\",alignSelf:\"center\"}}/> \r\n                                :\r\n                                    this.state.datos.length === 0 ?\r\n                                        <div className=\"col-md-12 text-center m-3\">Sin registros encontrados</div>\r\n                                    :\r\n                                        this.datalist()\r\n                                }\r\n                            </ul>                     \r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <TimbradoForm idUpdate={this.state.idUpdate} onUpdateParentList={this.updateList}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst { convertMiles } = require('../../utils/utils.js')\r\n\r\nexport default class CajaFacturasList extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            datos: [],\r\n            loading: true,\r\n            idUpdate: '',\r\n            didUpdate: true\r\n        }\r\n    }\r\n\r\n    updateList = async() => {\r\n        const queryParameters = new URLSearchParams(window.location.search);\r\n        const id = queryParameters.get(\"id\");\r\n\r\n        await axios.get(process.env.REACT_APP_SERVER_URL + \"/cajas-detalles/facturas/\"+id)\r\n        .then(response => {\r\n            this.setState({\r\n                datos: response.data\r\n            })\r\n        })\r\n        .catch(err => console.log(err))\r\n        \r\n        //Pagina la lista\r\n        //window.paginar('list-group','list-group-item',true);\r\n    }\r\n\r\n    componentDidMount(){\r\n        //console.log('params', this.props.match.params.id)\r\n\r\n        this.updateList()\r\n    }\r\n\r\n    datalistDetalle(dato){\r\n        return dato.inventariousage.map((el, index) => {            \r\n            const inventario = el.inventario[0];\r\n            return (\r\n                <div className=\"col-md-12 row\"  key={index}>\r\n                    <div className=\"col-md-2\"></div>\r\n                    <div className=\"col-md-4\">{inventario.descripcion}</div>\r\n                    <div className=\"col-md-2 text-right\">{convertMiles(el.cantidad)}</div>\r\n                    <div className=\"col-md-2 text-right\">{convertMiles(el.precio)}</div>\r\n                    <div className=\"col-md-2 text-right\">{convertMiles(el.total)}</div>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    irCajas = () => {window.location = \"Caja\"}\r\n   \r\n    datalist(){\r\n        console.log(this.state.datos)\r\n        return this.state.datos.map((dato, index) => {            \r\n            const factura = dato._id.factura[0];\r\n            return (\r\n                <li className=\"list-productos list-group-item \" key={index}>\r\n                    <div className=\"col-md-12\"><b>Razon Social: {factura.razonSocial + \" - Ruc: \" + factura.ruc  } </b></div>\r\n                    {this.datalistDetalle(dato)}                   \r\n                </li>)\r\n        })\r\n    }\r\n\r\n    render(){       \r\n        return(\r\n            <div className=\"content-wrapper\" id=\"content\">\r\n                <h2>Facturacion</h2>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-2 mb-2\">\r\n                        <button onClick={() => this.irCajas()} type=\"button\" className=\"btn btn-warning btn-sm\"><FontAwesomeIcon icon={faArrowLeft} /> Volver a Cajas</button>\r\n                    </div>\r\n                    <div className=\"col-md-12\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-header\">\r\n                                <div className=\"card-title row mb-0\">  \r\n                                    <div className=\"col-md-3\">Factura</div>\r\n                                    <div className=\"col-md-7\">Descripcion</div> \r\n                                </div>\r\n                            </div>          \r\n                            <input className=\"form-control inputsearch\" type=\"search\" placeholder=\"Busqueda (minimo 3 letras)...\" />                 \r\n                            <ul id=\"list\" className=\"list-group\">        \r\n                                {this.datalist()}                       \r\n                            </ul>                     \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { useState } from 'react';\r\n// import PropTypes from 'prop-types';\r\n//import companyLogo from '../../imagens/logo_150x350.png';\r\nimport companyLogo from '../../imagens/LogoDRDistribuidora.PNG';\r\nimport './login.css';\r\nconst server = process.env.REACT_APP_SERVER_URL;\r\n\r\nexport default function Login({ setToken }) {  \r\n    const [nickname, setNickname] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    \r\n    const handleSubmit = async e => {\r\n        e.preventDefault();\r\n        const token = await loginUser({\r\n            nickname,\r\n            password\r\n        });\r\n        setToken(token);\r\n        \r\n        if(token.type){\r\n            switch (token.type) {\r\n                case 'erruser':\r\n                    document.querySelector('#nickname-error').innerHTML = token.msg;\r\n                    break;\r\n                case 'errpass':\r\n                    document.querySelector('#pass-error').innerHTML = token.msg;\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            localStorage.removeItem('token');\r\n        }\r\n    }   \r\n    \r\n    async function loginUser(credentials) {   \r\n        return fetch(server + '/authenticate', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(credentials)\r\n        })\r\n          .then(data => data.json())\r\n    }\r\n\r\n    const handlerNickName = (value) => {\r\n        setNickname(value)\r\n        document.querySelector('#nickname-error').innerHTML = \"\";\r\n    }\r\n    const handlerPassword = (value) => {\r\n        setPassword(value)\r\n        document.querySelector('#pass-error').innerHTML = \"\";\r\n    }\r\n    const formIniciarSession = () => {\r\n        return <div className=\"iniciarsession login-card card mt-5\">\r\n                <div className=\"card-body\">                                \r\n                    <h3 className=\"text-center pt-2\"><img alt=\"\" src={companyLogo} /></h3>\r\n                    <br/>\r\n                    <form action=\"\" method=\"\" onSubmit={handleSubmit}>\r\n                        <div className=\"form-group row\">\r\n                            <label className=\"col-md-4 col-form-label text-md-right\">Nickname</label>\r\n                            <div className=\"col-md-6\">\r\n                                <input value={nickname} id=\"nickname\" autoFocus={true} type=\"text\" onChange={e => handlerNickName(e.target.value)} className=\"form-control\" required />\r\n                                <span id=\"nickname-error\" className=\"validation-error\"></span>\r\n                            </div>                                            \r\n                        </div>\r\n                        <div className=\"form-group row\">\r\n                            <label className=\"col-md-4 col-form-label text-md-right\">Password</label>\r\n                            <div className=\"col-md-6\">\r\n                                <input value={password} id=\"password\" type=\"password\" onChange={e => handlerPassword(e.target.value)} className=\"form-control\" required />\r\n                                <span id=\"pass-error\" className=\"validation-error\"></span>\r\n                            </div>                                                                                  \r\n                        </div>\r\n                        <div className=\"form-group col-md-12  text-center\">\r\n                            <button type=\"submit\" className=\"btn btn-warning m-1 col-md-4\">\r\n                                Iniciar Sessión\r\n                            </button>                             \r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n    }\r\n\r\n    const formulario = () => {\r\n        return formIniciarSession();\r\n    }\r\n    return(        \r\n        <div id=\"login\">       \r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center space-pt--r100 space-pb--r100\">\r\n                    <div className=\"col-md-6\">\r\n                        {formulario()}                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )    \r\n}\r\n\r\n// Login.propTypes = {\r\n//     setToken: PropTypes.func.isRequired\r\n// }","import './App.css';\r\nimport { useState } from 'react';\r\nimport { Menu } from './components/nav/menu';\r\nimport { NavbarTopMenu } from './components/nav/navbar-top';\r\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\r\nimport { UserContext } from './UserContext';\r\nimport './utils/registerLocaleEsp';\r\n\r\nimport Dashboard from './components/dashboard/dasboard.component';\r\nimport CajaList from './components/caja/caja-list.component';\r\nimport UsuariosList from './components/usuarios/usuarios-list.component';\r\nimport InventarioList from './components/inventario/inventario-list.component';\r\nimport ComprasList from './components/compras/compras-list.component';\r\nimport ProveedoresList from './components/proveedores/proveedor-list.component';\r\nimport CajaDetallesList from './components/caja-detalles/caja-detalles-list.component';\r\nimport CajaConfigList from './components/caja-config/caja-config-list.component';\r\nimport ClienteList from './components/clientes/cliente-list.component';\r\nimport TimbradosList from './components/timbrados/timbrados-list.component';\r\nimport CajaFacturasList from './components/caja-facturas/caja-facturas-list.component';\r\n\r\nimport Login from './components/login/login';\r\nimport logout from './components/login/logout';\r\nimport useToken from './components/login/useToken';\r\n\r\nconst jwt = require('jsonwebtoken');\r\nconst key = process.env.REACT_APP_JWTKEY;\r\n\r\nfunction App() {\r\n  const [ currentUser, setCurrentUser ] = useState(null); \r\n  const { token, setToken } = useToken(); \r\n\r\n  if(!token) {\r\n    console.log('Unauthorized: No token provided');\r\n    return <Login setToken={ setToken } />\r\n  }else{\r\n    //Obteniendo Datos del usuario\r\n    jwt.verify(token, key, async function(err, decoded) {\r\n      if (err) {\r\n        console.log('Unauthorized: Invalid token');  \r\n        logout();\r\n      }else{   \r\n        if(!currentUser){\r\n          setCurrentUser({\r\n            id: decoded.id,\r\n            name: decoded.nombre_completo,\r\n            nickname: decoded.nickname,\r\n            roles: decoded.roles,\r\n            fecha: new Date(),\r\n            caja: {}\r\n          })\r\n        }\r\n      } \r\n    });\r\n  }\r\n\r\n  const menu = () => {\r\n    if(currentUser){\r\n      console.log('User registrado', currentUser);\r\n      if(currentUser.roles.includes('CAJERO')){\r\n        console.log('RETORNA CAJERO')\r\n        return menu_cajero()\r\n      }else if(currentUser.roles.includes('ADM')){\r\n        console.log('RETORNA ADM')\r\n        return menu_admin()\r\n      }\r\n    }\r\n  }\r\n\r\n  const menu_admin = () => {\r\n    return (\r\n      <Routes>\r\n          <Route path='/Dashboard' element={<Dashboard />} />\r\n          <Route path='/Caja' element={<CajaList />} />\r\n          <Route path='/CajaDetalles' element={<CajaDetallesList />} />\r\n          <Route path='/Usuarios' element={<UsuariosList />} />\r\n          <Route path='/Inventario' element={<InventarioList />} /> \r\n          <Route path='/Compras' element={<ComprasList />} /> \r\n          <Route path='/Proveedores' element={<ProveedoresList />} />     \r\n          <Route path='/CajasConfig' element={<CajaConfigList />} /> \r\n          <Route path='/Clientes' element={<ClienteList />} /> \r\n          <Route path='/Timbrados' element={<TimbradosList />} />                 \r\n          <Route path='/CajaFacturas' exact element={<CajaFacturasList />} /> \r\n      </Routes>\r\n    )\r\n  }\r\n  const menu_cajero = () => {\r\n    return (\r\n      <Routes>\r\n          <Route path='/Dashboard' element={<Dashboard />} />\r\n          <Route path='/Caja' element={<CajaList />} />\r\n          <Route path='/CajaDetalles' element={<CajaDetallesList />} />\r\n          <Route path='/CajaFacturas' exact element={<CajaFacturasList />} /> \r\n      </Routes>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div id=\"container\"> \r\n        <div className=\"body-wrapper container-fluid p-0\">  \r\n          <UserContext.Provider value = { {currentUser} } >\r\n            {\r\n              (window.location.href.indexOf('CajaDetalles') < 0) ? <Menu/>  : <NavbarTopMenu />           \r\n            }\r\n            <BrowserRouter>\r\n              { \r\n                menu()\r\n              }      \r\n              \r\n            </BrowserRouter>\r\n          </UserContext.Provider> \r\n        </div>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { useState } from 'react';\r\n\r\nexport default function useToken() {  \r\n\r\n  const getToken = () => {\r\n    const tokenString = localStorage.getItem('tokenKH');\r\n    const userToken = JSON.parse(tokenString);    \r\n    return userToken?.token\r\n  };\r\n  \r\n  const getUsername = () => {\r\n    const tokenString = localStorage.getItem('tokenKH');\r\n    const userName = JSON.parse(tokenString);        \r\n    return userName?.username\r\n  };\r\n\r\n  const saveToken = userToken => {\r\n    localStorage.setItem('tokenKH', JSON.stringify(userToken));\r\n    setToken(userToken.token);\r\n  };\r\n\r\n  const [token, setToken] = useState(getToken());\r\n\r\n  return {\r\n    setToken: saveToken, token, getUsername, \r\n  }\r\n\r\n  \r\n}\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}